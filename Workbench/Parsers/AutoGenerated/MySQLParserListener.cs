//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.8
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from MySQLParser.g4 by ANTLR 4.8

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Workbench.Parsers {
/*
 * Copyright (c) 2018, 2019, Oracle and/or its affiliates. All rights reserved.
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License, version 2.0,
 * as published by the Free Software Foundation.
 *
 * This program is also distributed with certain software (including
 * but not limited to OpenSSL) that is licensed under separate terms, as
 * designated in a particular file or component or in included license
 * documentation. The authors of MySQL hereby grant you an additional
 * permission to link the program and your derivative works with the
 * separately licensed software that they have included with MySQL.
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See
 * the GNU General Public License, version 2.0, for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software Foundation, Inc.,
 * 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
 */

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="MySQLParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.8")]
[System.CLSCompliant(false)]
public interface IMySQLParserListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.query"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQuery([NotNull] MySQLParser.QueryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.query"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQuery([NotNull] MySQLParser.QueryContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.simpleStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimpleStatement([NotNull] MySQLParser.SimpleStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.simpleStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimpleStatement([NotNull] MySQLParser.SimpleStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.alterStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlterStatement([NotNull] MySQLParser.AlterStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.alterStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlterStatement([NotNull] MySQLParser.AlterStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.alterDatabase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlterDatabase([NotNull] MySQLParser.AlterDatabaseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.alterDatabase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlterDatabase([NotNull] MySQLParser.AlterDatabaseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.alterEvent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlterEvent([NotNull] MySQLParser.AlterEventContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.alterEvent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlterEvent([NotNull] MySQLParser.AlterEventContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.alterLogfileGroup"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlterLogfileGroup([NotNull] MySQLParser.AlterLogfileGroupContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.alterLogfileGroup"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlterLogfileGroup([NotNull] MySQLParser.AlterLogfileGroupContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.alterLogfileGroupOptions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlterLogfileGroupOptions([NotNull] MySQLParser.AlterLogfileGroupOptionsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.alterLogfileGroupOptions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlterLogfileGroupOptions([NotNull] MySQLParser.AlterLogfileGroupOptionsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.alterLogfileGroupOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlterLogfileGroupOption([NotNull] MySQLParser.AlterLogfileGroupOptionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.alterLogfileGroupOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlterLogfileGroupOption([NotNull] MySQLParser.AlterLogfileGroupOptionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.alterServer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlterServer([NotNull] MySQLParser.AlterServerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.alterServer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlterServer([NotNull] MySQLParser.AlterServerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.alterTable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlterTable([NotNull] MySQLParser.AlterTableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.alterTable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlterTable([NotNull] MySQLParser.AlterTableContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.alterTableActions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlterTableActions([NotNull] MySQLParser.AlterTableActionsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.alterTableActions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlterTableActions([NotNull] MySQLParser.AlterTableActionsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.alterCommandList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlterCommandList([NotNull] MySQLParser.AlterCommandListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.alterCommandList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlterCommandList([NotNull] MySQLParser.AlterCommandListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.alterCommandsModifierList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlterCommandsModifierList([NotNull] MySQLParser.AlterCommandsModifierListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.alterCommandsModifierList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlterCommandsModifierList([NotNull] MySQLParser.AlterCommandsModifierListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.standaloneAlterCommands"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStandaloneAlterCommands([NotNull] MySQLParser.StandaloneAlterCommandsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.standaloneAlterCommands"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStandaloneAlterCommands([NotNull] MySQLParser.StandaloneAlterCommandsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.alterPartition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlterPartition([NotNull] MySQLParser.AlterPartitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.alterPartition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlterPartition([NotNull] MySQLParser.AlterPartitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.alterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlterList([NotNull] MySQLParser.AlterListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.alterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlterList([NotNull] MySQLParser.AlterListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.alterCommandsModifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlterCommandsModifier([NotNull] MySQLParser.AlterCommandsModifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.alterCommandsModifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlterCommandsModifier([NotNull] MySQLParser.AlterCommandsModifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.alterListItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlterListItem([NotNull] MySQLParser.AlterListItemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.alterListItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlterListItem([NotNull] MySQLParser.AlterListItemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.place"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPlace([NotNull] MySQLParser.PlaceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.place"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPlace([NotNull] MySQLParser.PlaceContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.restrict"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRestrict([NotNull] MySQLParser.RestrictContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.restrict"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRestrict([NotNull] MySQLParser.RestrictContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.alterOrderList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlterOrderList([NotNull] MySQLParser.AlterOrderListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.alterOrderList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlterOrderList([NotNull] MySQLParser.AlterOrderListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.alterAlgorithmOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlterAlgorithmOption([NotNull] MySQLParser.AlterAlgorithmOptionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.alterAlgorithmOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlterAlgorithmOption([NotNull] MySQLParser.AlterAlgorithmOptionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.alterLockOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlterLockOption([NotNull] MySQLParser.AlterLockOptionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.alterLockOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlterLockOption([NotNull] MySQLParser.AlterLockOptionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.indexLockAndAlgorithm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIndexLockAndAlgorithm([NotNull] MySQLParser.IndexLockAndAlgorithmContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.indexLockAndAlgorithm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIndexLockAndAlgorithm([NotNull] MySQLParser.IndexLockAndAlgorithmContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.withValidation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWithValidation([NotNull] MySQLParser.WithValidationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.withValidation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWithValidation([NotNull] MySQLParser.WithValidationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.removePartitioning"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRemovePartitioning([NotNull] MySQLParser.RemovePartitioningContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.removePartitioning"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRemovePartitioning([NotNull] MySQLParser.RemovePartitioningContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.allOrPartitionNameList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAllOrPartitionNameList([NotNull] MySQLParser.AllOrPartitionNameListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.allOrPartitionNameList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAllOrPartitionNameList([NotNull] MySQLParser.AllOrPartitionNameListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.reorgPartitionRule"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReorgPartitionRule([NotNull] MySQLParser.ReorgPartitionRuleContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.reorgPartitionRule"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReorgPartitionRule([NotNull] MySQLParser.ReorgPartitionRuleContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.alterTablespace"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlterTablespace([NotNull] MySQLParser.AlterTablespaceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.alterTablespace"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlterTablespace([NotNull] MySQLParser.AlterTablespaceContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.alterUndoTablespace"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlterUndoTablespace([NotNull] MySQLParser.AlterUndoTablespaceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.alterUndoTablespace"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlterUndoTablespace([NotNull] MySQLParser.AlterUndoTablespaceContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.undoTableSpaceOptions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUndoTableSpaceOptions([NotNull] MySQLParser.UndoTableSpaceOptionsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.undoTableSpaceOptions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUndoTableSpaceOptions([NotNull] MySQLParser.UndoTableSpaceOptionsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.undoTableSpaceOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUndoTableSpaceOption([NotNull] MySQLParser.UndoTableSpaceOptionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.undoTableSpaceOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUndoTableSpaceOption([NotNull] MySQLParser.UndoTableSpaceOptionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.alterTablespaceOptions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlterTablespaceOptions([NotNull] MySQLParser.AlterTablespaceOptionsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.alterTablespaceOptions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlterTablespaceOptions([NotNull] MySQLParser.AlterTablespaceOptionsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.alterTablespaceOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlterTablespaceOption([NotNull] MySQLParser.AlterTablespaceOptionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.alterTablespaceOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlterTablespaceOption([NotNull] MySQLParser.AlterTablespaceOptionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.changeTablespaceOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterChangeTablespaceOption([NotNull] MySQLParser.ChangeTablespaceOptionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.changeTablespaceOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitChangeTablespaceOption([NotNull] MySQLParser.ChangeTablespaceOptionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.alterView"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlterView([NotNull] MySQLParser.AlterViewContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.alterView"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlterView([NotNull] MySQLParser.AlterViewContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.viewTail"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterViewTail([NotNull] MySQLParser.ViewTailContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.viewTail"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitViewTail([NotNull] MySQLParser.ViewTailContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.viewSelect"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterViewSelect([NotNull] MySQLParser.ViewSelectContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.viewSelect"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitViewSelect([NotNull] MySQLParser.ViewSelectContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.viewCheckOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterViewCheckOption([NotNull] MySQLParser.ViewCheckOptionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.viewCheckOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitViewCheckOption([NotNull] MySQLParser.ViewCheckOptionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.createStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreateStatement([NotNull] MySQLParser.CreateStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.createStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreateStatement([NotNull] MySQLParser.CreateStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.createDatabase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreateDatabase([NotNull] MySQLParser.CreateDatabaseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.createDatabase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreateDatabase([NotNull] MySQLParser.CreateDatabaseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.createDatabaseOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreateDatabaseOption([NotNull] MySQLParser.CreateDatabaseOptionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.createDatabaseOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreateDatabaseOption([NotNull] MySQLParser.CreateDatabaseOptionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.createTable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreateTable([NotNull] MySQLParser.CreateTableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.createTable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreateTable([NotNull] MySQLParser.CreateTableContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.tableElementList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTableElementList([NotNull] MySQLParser.TableElementListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.tableElementList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTableElementList([NotNull] MySQLParser.TableElementListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.tableElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTableElement([NotNull] MySQLParser.TableElementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.tableElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTableElement([NotNull] MySQLParser.TableElementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.duplicateAsQueryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDuplicateAsQueryExpression([NotNull] MySQLParser.DuplicateAsQueryExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.duplicateAsQueryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDuplicateAsQueryExpression([NotNull] MySQLParser.DuplicateAsQueryExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.queryExpressionOrParens"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQueryExpressionOrParens([NotNull] MySQLParser.QueryExpressionOrParensContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.queryExpressionOrParens"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQueryExpressionOrParens([NotNull] MySQLParser.QueryExpressionOrParensContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.createRoutine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreateRoutine([NotNull] MySQLParser.CreateRoutineContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.createRoutine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreateRoutine([NotNull] MySQLParser.CreateRoutineContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.createProcedure"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreateProcedure([NotNull] MySQLParser.CreateProcedureContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.createProcedure"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreateProcedure([NotNull] MySQLParser.CreateProcedureContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.createFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreateFunction([NotNull] MySQLParser.CreateFunctionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.createFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreateFunction([NotNull] MySQLParser.CreateFunctionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.createUdf"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreateUdf([NotNull] MySQLParser.CreateUdfContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.createUdf"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreateUdf([NotNull] MySQLParser.CreateUdfContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.routineCreateOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRoutineCreateOption([NotNull] MySQLParser.RoutineCreateOptionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.routineCreateOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRoutineCreateOption([NotNull] MySQLParser.RoutineCreateOptionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.routineAlterOptions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRoutineAlterOptions([NotNull] MySQLParser.RoutineAlterOptionsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.routineAlterOptions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRoutineAlterOptions([NotNull] MySQLParser.RoutineAlterOptionsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.routineOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRoutineOption([NotNull] MySQLParser.RoutineOptionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.routineOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRoutineOption([NotNull] MySQLParser.RoutineOptionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.createIndex"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreateIndex([NotNull] MySQLParser.CreateIndexContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.createIndex"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreateIndex([NotNull] MySQLParser.CreateIndexContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.indexNameAndType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIndexNameAndType([NotNull] MySQLParser.IndexNameAndTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.indexNameAndType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIndexNameAndType([NotNull] MySQLParser.IndexNameAndTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.createIndexTarget"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreateIndexTarget([NotNull] MySQLParser.CreateIndexTargetContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.createIndexTarget"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreateIndexTarget([NotNull] MySQLParser.CreateIndexTargetContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.createLogfileGroup"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreateLogfileGroup([NotNull] MySQLParser.CreateLogfileGroupContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.createLogfileGroup"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreateLogfileGroup([NotNull] MySQLParser.CreateLogfileGroupContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.logfileGroupOptions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLogfileGroupOptions([NotNull] MySQLParser.LogfileGroupOptionsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.logfileGroupOptions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLogfileGroupOptions([NotNull] MySQLParser.LogfileGroupOptionsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.logfileGroupOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLogfileGroupOption([NotNull] MySQLParser.LogfileGroupOptionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.logfileGroupOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLogfileGroupOption([NotNull] MySQLParser.LogfileGroupOptionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.createServer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreateServer([NotNull] MySQLParser.CreateServerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.createServer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreateServer([NotNull] MySQLParser.CreateServerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.serverOptions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterServerOptions([NotNull] MySQLParser.ServerOptionsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.serverOptions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitServerOptions([NotNull] MySQLParser.ServerOptionsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.serverOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterServerOption([NotNull] MySQLParser.ServerOptionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.serverOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitServerOption([NotNull] MySQLParser.ServerOptionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.createTablespace"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreateTablespace([NotNull] MySQLParser.CreateTablespaceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.createTablespace"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreateTablespace([NotNull] MySQLParser.CreateTablespaceContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.createUndoTablespace"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreateUndoTablespace([NotNull] MySQLParser.CreateUndoTablespaceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.createUndoTablespace"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreateUndoTablespace([NotNull] MySQLParser.CreateUndoTablespaceContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.tsDataFileName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTsDataFileName([NotNull] MySQLParser.TsDataFileNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.tsDataFileName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTsDataFileName([NotNull] MySQLParser.TsDataFileNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.tsDataFile"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTsDataFile([NotNull] MySQLParser.TsDataFileContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.tsDataFile"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTsDataFile([NotNull] MySQLParser.TsDataFileContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.tablespaceOptions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTablespaceOptions([NotNull] MySQLParser.TablespaceOptionsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.tablespaceOptions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTablespaceOptions([NotNull] MySQLParser.TablespaceOptionsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.tablespaceOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTablespaceOption([NotNull] MySQLParser.TablespaceOptionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.tablespaceOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTablespaceOption([NotNull] MySQLParser.TablespaceOptionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.tsOptionInitialSize"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTsOptionInitialSize([NotNull] MySQLParser.TsOptionInitialSizeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.tsOptionInitialSize"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTsOptionInitialSize([NotNull] MySQLParser.TsOptionInitialSizeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.tsOptionUndoRedoBufferSize"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTsOptionUndoRedoBufferSize([NotNull] MySQLParser.TsOptionUndoRedoBufferSizeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.tsOptionUndoRedoBufferSize"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTsOptionUndoRedoBufferSize([NotNull] MySQLParser.TsOptionUndoRedoBufferSizeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.tsOptionAutoextendSize"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTsOptionAutoextendSize([NotNull] MySQLParser.TsOptionAutoextendSizeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.tsOptionAutoextendSize"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTsOptionAutoextendSize([NotNull] MySQLParser.TsOptionAutoextendSizeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.tsOptionMaxSize"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTsOptionMaxSize([NotNull] MySQLParser.TsOptionMaxSizeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.tsOptionMaxSize"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTsOptionMaxSize([NotNull] MySQLParser.TsOptionMaxSizeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.tsOptionExtentSize"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTsOptionExtentSize([NotNull] MySQLParser.TsOptionExtentSizeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.tsOptionExtentSize"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTsOptionExtentSize([NotNull] MySQLParser.TsOptionExtentSizeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.tsOptionNodegroup"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTsOptionNodegroup([NotNull] MySQLParser.TsOptionNodegroupContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.tsOptionNodegroup"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTsOptionNodegroup([NotNull] MySQLParser.TsOptionNodegroupContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.tsOptionEngine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTsOptionEngine([NotNull] MySQLParser.TsOptionEngineContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.tsOptionEngine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTsOptionEngine([NotNull] MySQLParser.TsOptionEngineContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.tsOptionWait"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTsOptionWait([NotNull] MySQLParser.TsOptionWaitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.tsOptionWait"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTsOptionWait([NotNull] MySQLParser.TsOptionWaitContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.tsOptionComment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTsOptionComment([NotNull] MySQLParser.TsOptionCommentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.tsOptionComment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTsOptionComment([NotNull] MySQLParser.TsOptionCommentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.tsOptionFileblockSize"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTsOptionFileblockSize([NotNull] MySQLParser.TsOptionFileblockSizeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.tsOptionFileblockSize"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTsOptionFileblockSize([NotNull] MySQLParser.TsOptionFileblockSizeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.tsOptionEncryption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTsOptionEncryption([NotNull] MySQLParser.TsOptionEncryptionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.tsOptionEncryption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTsOptionEncryption([NotNull] MySQLParser.TsOptionEncryptionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.createView"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreateView([NotNull] MySQLParser.CreateViewContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.createView"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreateView([NotNull] MySQLParser.CreateViewContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.viewReplaceOrAlgorithm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterViewReplaceOrAlgorithm([NotNull] MySQLParser.ViewReplaceOrAlgorithmContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.viewReplaceOrAlgorithm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitViewReplaceOrAlgorithm([NotNull] MySQLParser.ViewReplaceOrAlgorithmContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.viewAlgorithm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterViewAlgorithm([NotNull] MySQLParser.ViewAlgorithmContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.viewAlgorithm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitViewAlgorithm([NotNull] MySQLParser.ViewAlgorithmContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.viewSuid"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterViewSuid([NotNull] MySQLParser.ViewSuidContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.viewSuid"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitViewSuid([NotNull] MySQLParser.ViewSuidContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.createTrigger"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreateTrigger([NotNull] MySQLParser.CreateTriggerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.createTrigger"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreateTrigger([NotNull] MySQLParser.CreateTriggerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.triggerFollowsPrecedesClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTriggerFollowsPrecedesClause([NotNull] MySQLParser.TriggerFollowsPrecedesClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.triggerFollowsPrecedesClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTriggerFollowsPrecedesClause([NotNull] MySQLParser.TriggerFollowsPrecedesClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.createEvent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreateEvent([NotNull] MySQLParser.CreateEventContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.createEvent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreateEvent([NotNull] MySQLParser.CreateEventContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.createRole"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreateRole([NotNull] MySQLParser.CreateRoleContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.createRole"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreateRole([NotNull] MySQLParser.CreateRoleContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.createSpatialReference"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreateSpatialReference([NotNull] MySQLParser.CreateSpatialReferenceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.createSpatialReference"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreateSpatialReference([NotNull] MySQLParser.CreateSpatialReferenceContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.srsAttribute"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSrsAttribute([NotNull] MySQLParser.SrsAttributeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.srsAttribute"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSrsAttribute([NotNull] MySQLParser.SrsAttributeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.dropStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDropStatement([NotNull] MySQLParser.DropStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.dropStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDropStatement([NotNull] MySQLParser.DropStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.dropDatabase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDropDatabase([NotNull] MySQLParser.DropDatabaseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.dropDatabase"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDropDatabase([NotNull] MySQLParser.DropDatabaseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.dropEvent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDropEvent([NotNull] MySQLParser.DropEventContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.dropEvent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDropEvent([NotNull] MySQLParser.DropEventContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.dropFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDropFunction([NotNull] MySQLParser.DropFunctionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.dropFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDropFunction([NotNull] MySQLParser.DropFunctionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.dropProcedure"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDropProcedure([NotNull] MySQLParser.DropProcedureContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.dropProcedure"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDropProcedure([NotNull] MySQLParser.DropProcedureContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.dropIndex"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDropIndex([NotNull] MySQLParser.DropIndexContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.dropIndex"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDropIndex([NotNull] MySQLParser.DropIndexContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.dropLogfileGroup"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDropLogfileGroup([NotNull] MySQLParser.DropLogfileGroupContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.dropLogfileGroup"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDropLogfileGroup([NotNull] MySQLParser.DropLogfileGroupContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.dropLogfileGroupOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDropLogfileGroupOption([NotNull] MySQLParser.DropLogfileGroupOptionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.dropLogfileGroupOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDropLogfileGroupOption([NotNull] MySQLParser.DropLogfileGroupOptionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.dropServer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDropServer([NotNull] MySQLParser.DropServerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.dropServer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDropServer([NotNull] MySQLParser.DropServerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.dropTable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDropTable([NotNull] MySQLParser.DropTableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.dropTable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDropTable([NotNull] MySQLParser.DropTableContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.dropTableSpace"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDropTableSpace([NotNull] MySQLParser.DropTableSpaceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.dropTableSpace"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDropTableSpace([NotNull] MySQLParser.DropTableSpaceContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.dropTrigger"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDropTrigger([NotNull] MySQLParser.DropTriggerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.dropTrigger"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDropTrigger([NotNull] MySQLParser.DropTriggerContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.dropView"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDropView([NotNull] MySQLParser.DropViewContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.dropView"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDropView([NotNull] MySQLParser.DropViewContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.dropRole"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDropRole([NotNull] MySQLParser.DropRoleContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.dropRole"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDropRole([NotNull] MySQLParser.DropRoleContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.dropSpatialReference"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDropSpatialReference([NotNull] MySQLParser.DropSpatialReferenceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.dropSpatialReference"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDropSpatialReference([NotNull] MySQLParser.DropSpatialReferenceContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.dropUndoTablespace"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDropUndoTablespace([NotNull] MySQLParser.DropUndoTablespaceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.dropUndoTablespace"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDropUndoTablespace([NotNull] MySQLParser.DropUndoTablespaceContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.renameTableStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRenameTableStatement([NotNull] MySQLParser.RenameTableStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.renameTableStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRenameTableStatement([NotNull] MySQLParser.RenameTableStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.renamePair"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRenamePair([NotNull] MySQLParser.RenamePairContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.renamePair"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRenamePair([NotNull] MySQLParser.RenamePairContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.truncateTableStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTruncateTableStatement([NotNull] MySQLParser.TruncateTableStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.truncateTableStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTruncateTableStatement([NotNull] MySQLParser.TruncateTableStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.importStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImportStatement([NotNull] MySQLParser.ImportStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.importStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImportStatement([NotNull] MySQLParser.ImportStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.callStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCallStatement([NotNull] MySQLParser.CallStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.callStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCallStatement([NotNull] MySQLParser.CallStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.deleteStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeleteStatement([NotNull] MySQLParser.DeleteStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.deleteStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeleteStatement([NotNull] MySQLParser.DeleteStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.partitionDelete"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPartitionDelete([NotNull] MySQLParser.PartitionDeleteContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.partitionDelete"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPartitionDelete([NotNull] MySQLParser.PartitionDeleteContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.deleteStatementOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeleteStatementOption([NotNull] MySQLParser.DeleteStatementOptionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.deleteStatementOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeleteStatementOption([NotNull] MySQLParser.DeleteStatementOptionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.doStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDoStatement([NotNull] MySQLParser.DoStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.doStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDoStatement([NotNull] MySQLParser.DoStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.handlerStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHandlerStatement([NotNull] MySQLParser.HandlerStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.handlerStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHandlerStatement([NotNull] MySQLParser.HandlerStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.handlerReadOrScan"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHandlerReadOrScan([NotNull] MySQLParser.HandlerReadOrScanContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.handlerReadOrScan"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHandlerReadOrScan([NotNull] MySQLParser.HandlerReadOrScanContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.insertStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInsertStatement([NotNull] MySQLParser.InsertStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.insertStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInsertStatement([NotNull] MySQLParser.InsertStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.insertLockOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInsertLockOption([NotNull] MySQLParser.InsertLockOptionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.insertLockOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInsertLockOption([NotNull] MySQLParser.InsertLockOptionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.insertFromConstructor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInsertFromConstructor([NotNull] MySQLParser.InsertFromConstructorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.insertFromConstructor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInsertFromConstructor([NotNull] MySQLParser.InsertFromConstructorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.fields"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFields([NotNull] MySQLParser.FieldsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.fields"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFields([NotNull] MySQLParser.FieldsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.insertValues"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInsertValues([NotNull] MySQLParser.InsertValuesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.insertValues"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInsertValues([NotNull] MySQLParser.InsertValuesContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.insertQueryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInsertQueryExpression([NotNull] MySQLParser.InsertQueryExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.insertQueryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInsertQueryExpression([NotNull] MySQLParser.InsertQueryExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.valueList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterValueList([NotNull] MySQLParser.ValueListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.valueList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitValueList([NotNull] MySQLParser.ValueListContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>values</c>
	/// labeled alternative in <see cref="MySQLParser.exprexprexprexprexprboolPriboolPriboolPriboolPripredicateOperationspredicateOperationspredicateOperationspredicateOperationssimpleExprsimpleExprsimpleExprsimpleExprsimpleExprsimpleExprsimpleExprsimpleExprsimpleExprsimpleExprsimpleExprsimpleExprsimpleExprsimpleExprsimpleExprsimpleExprsimpleExprsimpleExprsimpleExprsimpleExprsimpleExprsimpleExprsimpleExprsimpleExprsimpleExprpartitionTypeDefpartitionTypeDefpartitionTypeDef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterValues([NotNull] MySQLParser.ValuesContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>values</c>
	/// labeled alternative in <see cref="MySQLParser.exprexprexprexprexprboolPriboolPriboolPriboolPripredicateOperationspredicateOperationspredicateOperationspredicateOperationssimpleExprsimpleExprsimpleExprsimpleExprsimpleExprsimpleExprsimpleExprsimpleExprsimpleExprsimpleExprsimpleExprsimpleExprsimpleExprsimpleExprsimpleExprsimpleExprsimpleExprsimpleExprsimpleExprsimpleExprsimpleExprsimpleExprsimpleExprsimpleExprsimpleExprpartitionTypeDefpartitionTypeDefpartitionTypeDef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitValues([NotNull] MySQLParser.ValuesContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.insertUpdateList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInsertUpdateList([NotNull] MySQLParser.InsertUpdateListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.insertUpdateList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInsertUpdateList([NotNull] MySQLParser.InsertUpdateListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.loadStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLoadStatement([NotNull] MySQLParser.LoadStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.loadStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLoadStatement([NotNull] MySQLParser.LoadStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.dataOrXml"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDataOrXml([NotNull] MySQLParser.DataOrXmlContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.dataOrXml"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDataOrXml([NotNull] MySQLParser.DataOrXmlContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.xmlRowsIdentifiedBy"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterXmlRowsIdentifiedBy([NotNull] MySQLParser.XmlRowsIdentifiedByContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.xmlRowsIdentifiedBy"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitXmlRowsIdentifiedBy([NotNull] MySQLParser.XmlRowsIdentifiedByContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.loadDataFileTail"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLoadDataFileTail([NotNull] MySQLParser.LoadDataFileTailContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.loadDataFileTail"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLoadDataFileTail([NotNull] MySQLParser.LoadDataFileTailContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.loadDataFileTargetList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLoadDataFileTargetList([NotNull] MySQLParser.LoadDataFileTargetListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.loadDataFileTargetList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLoadDataFileTargetList([NotNull] MySQLParser.LoadDataFileTargetListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.fieldOrVariableList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFieldOrVariableList([NotNull] MySQLParser.FieldOrVariableListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.fieldOrVariableList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFieldOrVariableList([NotNull] MySQLParser.FieldOrVariableListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.replaceStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReplaceStatement([NotNull] MySQLParser.ReplaceStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.replaceStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReplaceStatement([NotNull] MySQLParser.ReplaceStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.selectStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSelectStatement([NotNull] MySQLParser.SelectStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.selectStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSelectStatement([NotNull] MySQLParser.SelectStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.selectStatementWithInto"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSelectStatementWithInto([NotNull] MySQLParser.SelectStatementWithIntoContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.selectStatementWithInto"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSelectStatementWithInto([NotNull] MySQLParser.SelectStatementWithIntoContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.queryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQueryExpression([NotNull] MySQLParser.QueryExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.queryExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQueryExpression([NotNull] MySQLParser.QueryExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.queryExpressionBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQueryExpressionBody([NotNull] MySQLParser.QueryExpressionBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.queryExpressionBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQueryExpressionBody([NotNull] MySQLParser.QueryExpressionBodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.queryExpressionParens"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQueryExpressionParens([NotNull] MySQLParser.QueryExpressionParensContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.queryExpressionParens"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQueryExpressionParens([NotNull] MySQLParser.QueryExpressionParensContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.querySpecification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQuerySpecification([NotNull] MySQLParser.QuerySpecificationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.querySpecification"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQuerySpecification([NotNull] MySQLParser.QuerySpecificationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.subquery"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSubquery([NotNull] MySQLParser.SubqueryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.subquery"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSubquery([NotNull] MySQLParser.SubqueryContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.querySpecOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQuerySpecOption([NotNull] MySQLParser.QuerySpecOptionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.querySpecOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQuerySpecOption([NotNull] MySQLParser.QuerySpecOptionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.limitClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLimitClause([NotNull] MySQLParser.LimitClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.limitClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLimitClause([NotNull] MySQLParser.LimitClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.simpleLimitClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimpleLimitClause([NotNull] MySQLParser.SimpleLimitClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.simpleLimitClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimpleLimitClause([NotNull] MySQLParser.SimpleLimitClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.limitOptions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLimitOptions([NotNull] MySQLParser.LimitOptionsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.limitOptions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLimitOptions([NotNull] MySQLParser.LimitOptionsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.limitOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLimitOption([NotNull] MySQLParser.LimitOptionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.limitOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLimitOption([NotNull] MySQLParser.LimitOptionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.intoClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIntoClause([NotNull] MySQLParser.IntoClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.intoClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIntoClause([NotNull] MySQLParser.IntoClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.procedureAnalyseClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProcedureAnalyseClause([NotNull] MySQLParser.ProcedureAnalyseClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.procedureAnalyseClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProcedureAnalyseClause([NotNull] MySQLParser.ProcedureAnalyseClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.havingClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHavingClause([NotNull] MySQLParser.HavingClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.havingClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHavingClause([NotNull] MySQLParser.HavingClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.windowClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWindowClause([NotNull] MySQLParser.WindowClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.windowClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWindowClause([NotNull] MySQLParser.WindowClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.windowDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWindowDefinition([NotNull] MySQLParser.WindowDefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.windowDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWindowDefinition([NotNull] MySQLParser.WindowDefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.windowSpec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWindowSpec([NotNull] MySQLParser.WindowSpecContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.windowSpec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWindowSpec([NotNull] MySQLParser.WindowSpecContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.windowSpecDetails"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWindowSpecDetails([NotNull] MySQLParser.WindowSpecDetailsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.windowSpecDetails"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWindowSpecDetails([NotNull] MySQLParser.WindowSpecDetailsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.windowFrameClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWindowFrameClause([NotNull] MySQLParser.WindowFrameClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.windowFrameClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWindowFrameClause([NotNull] MySQLParser.WindowFrameClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.windowFrameUnits"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWindowFrameUnits([NotNull] MySQLParser.WindowFrameUnitsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.windowFrameUnits"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWindowFrameUnits([NotNull] MySQLParser.WindowFrameUnitsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.windowFrameExtent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWindowFrameExtent([NotNull] MySQLParser.WindowFrameExtentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.windowFrameExtent"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWindowFrameExtent([NotNull] MySQLParser.WindowFrameExtentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.windowFrameStart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWindowFrameStart([NotNull] MySQLParser.WindowFrameStartContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.windowFrameStart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWindowFrameStart([NotNull] MySQLParser.WindowFrameStartContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.windowFrameBetween"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWindowFrameBetween([NotNull] MySQLParser.WindowFrameBetweenContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.windowFrameBetween"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWindowFrameBetween([NotNull] MySQLParser.WindowFrameBetweenContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.windowFrameBound"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWindowFrameBound([NotNull] MySQLParser.WindowFrameBoundContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.windowFrameBound"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWindowFrameBound([NotNull] MySQLParser.WindowFrameBoundContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.windowFrameExclusion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWindowFrameExclusion([NotNull] MySQLParser.WindowFrameExclusionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.windowFrameExclusion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWindowFrameExclusion([NotNull] MySQLParser.WindowFrameExclusionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.withClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWithClause([NotNull] MySQLParser.WithClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.withClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWithClause([NotNull] MySQLParser.WithClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.commonTableExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCommonTableExpression([NotNull] MySQLParser.CommonTableExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.commonTableExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCommonTableExpression([NotNull] MySQLParser.CommonTableExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.groupByClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGroupByClause([NotNull] MySQLParser.GroupByClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.groupByClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGroupByClause([NotNull] MySQLParser.GroupByClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.olapOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOlapOption([NotNull] MySQLParser.OlapOptionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.olapOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOlapOption([NotNull] MySQLParser.OlapOptionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.orderClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOrderClause([NotNull] MySQLParser.OrderClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.orderClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOrderClause([NotNull] MySQLParser.OrderClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.direction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDirection([NotNull] MySQLParser.DirectionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.direction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDirection([NotNull] MySQLParser.DirectionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.fromClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFromClause([NotNull] MySQLParser.FromClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.fromClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFromClause([NotNull] MySQLParser.FromClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.tableReferenceList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTableReferenceList([NotNull] MySQLParser.TableReferenceListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.tableReferenceList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTableReferenceList([NotNull] MySQLParser.TableReferenceListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.selectOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSelectOption([NotNull] MySQLParser.SelectOptionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.selectOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSelectOption([NotNull] MySQLParser.SelectOptionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.lockingClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLockingClause([NotNull] MySQLParser.LockingClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.lockingClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLockingClause([NotNull] MySQLParser.LockingClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.lockStrengh"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLockStrengh([NotNull] MySQLParser.LockStrenghContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.lockStrengh"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLockStrengh([NotNull] MySQLParser.LockStrenghContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.lockedRowAction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLockedRowAction([NotNull] MySQLParser.LockedRowActionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.lockedRowAction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLockedRowAction([NotNull] MySQLParser.LockedRowActionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.selectItemList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSelectItemList([NotNull] MySQLParser.SelectItemListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.selectItemList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSelectItemList([NotNull] MySQLParser.SelectItemListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.selectItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSelectItem([NotNull] MySQLParser.SelectItemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.selectItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSelectItem([NotNull] MySQLParser.SelectItemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.selectAlias"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSelectAlias([NotNull] MySQLParser.SelectAliasContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.selectAlias"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSelectAlias([NotNull] MySQLParser.SelectAliasContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.whereClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhereClause([NotNull] MySQLParser.WhereClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.whereClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhereClause([NotNull] MySQLParser.WhereClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.tableReference"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTableReference([NotNull] MySQLParser.TableReferenceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.tableReference"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTableReference([NotNull] MySQLParser.TableReferenceContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.escapedTableReference"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEscapedTableReference([NotNull] MySQLParser.EscapedTableReferenceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.escapedTableReference"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEscapedTableReference([NotNull] MySQLParser.EscapedTableReferenceContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.joinedTable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterJoinedTable([NotNull] MySQLParser.JoinedTableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.joinedTable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitJoinedTable([NotNull] MySQLParser.JoinedTableContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.naturalJoinType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNaturalJoinType([NotNull] MySQLParser.NaturalJoinTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.naturalJoinType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNaturalJoinType([NotNull] MySQLParser.NaturalJoinTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.innerJoinType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInnerJoinType([NotNull] MySQLParser.InnerJoinTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.innerJoinType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInnerJoinType([NotNull] MySQLParser.InnerJoinTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.outerJoinType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOuterJoinType([NotNull] MySQLParser.OuterJoinTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.outerJoinType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOuterJoinType([NotNull] MySQLParser.OuterJoinTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.tableFactor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTableFactor([NotNull] MySQLParser.TableFactorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.tableFactor"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTableFactor([NotNull] MySQLParser.TableFactorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.singleTable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSingleTable([NotNull] MySQLParser.SingleTableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.singleTable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSingleTable([NotNull] MySQLParser.SingleTableContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.singleTableParens"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSingleTableParens([NotNull] MySQLParser.SingleTableParensContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.singleTableParens"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSingleTableParens([NotNull] MySQLParser.SingleTableParensContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.derivedTable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDerivedTable([NotNull] MySQLParser.DerivedTableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.derivedTable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDerivedTable([NotNull] MySQLParser.DerivedTableContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.tableReferenceListParens"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTableReferenceListParens([NotNull] MySQLParser.TableReferenceListParensContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.tableReferenceListParens"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTableReferenceListParens([NotNull] MySQLParser.TableReferenceListParensContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.tableFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTableFunction([NotNull] MySQLParser.TableFunctionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.tableFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTableFunction([NotNull] MySQLParser.TableFunctionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.columnsClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterColumnsClause([NotNull] MySQLParser.ColumnsClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.columnsClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitColumnsClause([NotNull] MySQLParser.ColumnsClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.jtColumn"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterJtColumn([NotNull] MySQLParser.JtColumnContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.jtColumn"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitJtColumn([NotNull] MySQLParser.JtColumnContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.onEmptyOrError"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOnEmptyOrError([NotNull] MySQLParser.OnEmptyOrErrorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.onEmptyOrError"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOnEmptyOrError([NotNull] MySQLParser.OnEmptyOrErrorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.onEmpty"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOnEmpty([NotNull] MySQLParser.OnEmptyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.onEmpty"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOnEmpty([NotNull] MySQLParser.OnEmptyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.onError"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOnError([NotNull] MySQLParser.OnErrorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.onError"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOnError([NotNull] MySQLParser.OnErrorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.jtOnResponse"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterJtOnResponse([NotNull] MySQLParser.JtOnResponseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.jtOnResponse"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitJtOnResponse([NotNull] MySQLParser.JtOnResponseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.unionOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnionOption([NotNull] MySQLParser.UnionOptionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.unionOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnionOption([NotNull] MySQLParser.UnionOptionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.tableAlias"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTableAlias([NotNull] MySQLParser.TableAliasContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.tableAlias"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTableAlias([NotNull] MySQLParser.TableAliasContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.indexHintList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIndexHintList([NotNull] MySQLParser.IndexHintListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.indexHintList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIndexHintList([NotNull] MySQLParser.IndexHintListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.indexHint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIndexHint([NotNull] MySQLParser.IndexHintContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.indexHint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIndexHint([NotNull] MySQLParser.IndexHintContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.indexHintType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIndexHintType([NotNull] MySQLParser.IndexHintTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.indexHintType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIndexHintType([NotNull] MySQLParser.IndexHintTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.keyOrIndex"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterKeyOrIndex([NotNull] MySQLParser.KeyOrIndexContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.keyOrIndex"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitKeyOrIndex([NotNull] MySQLParser.KeyOrIndexContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.constraintKeyType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstraintKeyType([NotNull] MySQLParser.ConstraintKeyTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.constraintKeyType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstraintKeyType([NotNull] MySQLParser.ConstraintKeyTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.indexHintClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIndexHintClause([NotNull] MySQLParser.IndexHintClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.indexHintClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIndexHintClause([NotNull] MySQLParser.IndexHintClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.indexList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIndexList([NotNull] MySQLParser.IndexListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.indexList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIndexList([NotNull] MySQLParser.IndexListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.indexListElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIndexListElement([NotNull] MySQLParser.IndexListElementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.indexListElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIndexListElement([NotNull] MySQLParser.IndexListElementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.updateStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUpdateStatement([NotNull] MySQLParser.UpdateStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.updateStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUpdateStatement([NotNull] MySQLParser.UpdateStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.transactionOrLockingStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTransactionOrLockingStatement([NotNull] MySQLParser.TransactionOrLockingStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.transactionOrLockingStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTransactionOrLockingStatement([NotNull] MySQLParser.TransactionOrLockingStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.transactionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTransactionStatement([NotNull] MySQLParser.TransactionStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.transactionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTransactionStatement([NotNull] MySQLParser.TransactionStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.beginWork"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBeginWork([NotNull] MySQLParser.BeginWorkContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.beginWork"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBeginWork([NotNull] MySQLParser.BeginWorkContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.transactionCharacteristic"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTransactionCharacteristic([NotNull] MySQLParser.TransactionCharacteristicContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.transactionCharacteristic"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTransactionCharacteristic([NotNull] MySQLParser.TransactionCharacteristicContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.setTransactionCharacteristic"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSetTransactionCharacteristic([NotNull] MySQLParser.SetTransactionCharacteristicContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.setTransactionCharacteristic"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSetTransactionCharacteristic([NotNull] MySQLParser.SetTransactionCharacteristicContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.isolationLevel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIsolationLevel([NotNull] MySQLParser.IsolationLevelContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.isolationLevel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIsolationLevel([NotNull] MySQLParser.IsolationLevelContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.savepointStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSavepointStatement([NotNull] MySQLParser.SavepointStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.savepointStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSavepointStatement([NotNull] MySQLParser.SavepointStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.lockStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLockStatement([NotNull] MySQLParser.LockStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.lockStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLockStatement([NotNull] MySQLParser.LockStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.lockItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLockItem([NotNull] MySQLParser.LockItemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.lockItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLockItem([NotNull] MySQLParser.LockItemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.lockOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLockOption([NotNull] MySQLParser.LockOptionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.lockOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLockOption([NotNull] MySQLParser.LockOptionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.xaStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterXaStatement([NotNull] MySQLParser.XaStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.xaStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitXaStatement([NotNull] MySQLParser.XaStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.xaConvert"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterXaConvert([NotNull] MySQLParser.XaConvertContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.xaConvert"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitXaConvert([NotNull] MySQLParser.XaConvertContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.xid"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterXid([NotNull] MySQLParser.XidContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.xid"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitXid([NotNull] MySQLParser.XidContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.replicationStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReplicationStatement([NotNull] MySQLParser.ReplicationStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.replicationStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReplicationStatement([NotNull] MySQLParser.ReplicationStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.resetOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterResetOption([NotNull] MySQLParser.ResetOptionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.resetOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitResetOption([NotNull] MySQLParser.ResetOptionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.masterResetOptions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMasterResetOptions([NotNull] MySQLParser.MasterResetOptionsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.masterResetOptions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMasterResetOptions([NotNull] MySQLParser.MasterResetOptionsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.replicationLoad"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReplicationLoad([NotNull] MySQLParser.ReplicationLoadContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.replicationLoad"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReplicationLoad([NotNull] MySQLParser.ReplicationLoadContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.changeMaster"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterChangeMaster([NotNull] MySQLParser.ChangeMasterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.changeMaster"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitChangeMaster([NotNull] MySQLParser.ChangeMasterContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.changeMasterOptions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterChangeMasterOptions([NotNull] MySQLParser.ChangeMasterOptionsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.changeMasterOptions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitChangeMasterOptions([NotNull] MySQLParser.ChangeMasterOptionsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.masterOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMasterOption([NotNull] MySQLParser.MasterOptionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.masterOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMasterOption([NotNull] MySQLParser.MasterOptionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.masterFileDef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMasterFileDef([NotNull] MySQLParser.MasterFileDefContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.masterFileDef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMasterFileDef([NotNull] MySQLParser.MasterFileDefContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.serverIdList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterServerIdList([NotNull] MySQLParser.ServerIdListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.serverIdList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitServerIdList([NotNull] MySQLParser.ServerIdListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.changeReplication"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterChangeReplication([NotNull] MySQLParser.ChangeReplicationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.changeReplication"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitChangeReplication([NotNull] MySQLParser.ChangeReplicationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.filterDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFilterDefinition([NotNull] MySQLParser.FilterDefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.filterDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFilterDefinition([NotNull] MySQLParser.FilterDefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.filterDbList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFilterDbList([NotNull] MySQLParser.FilterDbListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.filterDbList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFilterDbList([NotNull] MySQLParser.FilterDbListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.filterTableList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFilterTableList([NotNull] MySQLParser.FilterTableListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.filterTableList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFilterTableList([NotNull] MySQLParser.FilterTableListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.filterStringList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFilterStringList([NotNull] MySQLParser.FilterStringListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.filterStringList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFilterStringList([NotNull] MySQLParser.FilterStringListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.filterWildDbTableString"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFilterWildDbTableString([NotNull] MySQLParser.FilterWildDbTableStringContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.filterWildDbTableString"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFilterWildDbTableString([NotNull] MySQLParser.FilterWildDbTableStringContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.filterDbPairList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFilterDbPairList([NotNull] MySQLParser.FilterDbPairListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.filterDbPairList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFilterDbPairList([NotNull] MySQLParser.FilterDbPairListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.slave"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSlave([NotNull] MySQLParser.SlaveContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.slave"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSlave([NotNull] MySQLParser.SlaveContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.slaveUntilOptions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSlaveUntilOptions([NotNull] MySQLParser.SlaveUntilOptionsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.slaveUntilOptions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSlaveUntilOptions([NotNull] MySQLParser.SlaveUntilOptionsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.slaveConnectionOptions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSlaveConnectionOptions([NotNull] MySQLParser.SlaveConnectionOptionsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.slaveConnectionOptions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSlaveConnectionOptions([NotNull] MySQLParser.SlaveConnectionOptionsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.slaveThreadOptions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSlaveThreadOptions([NotNull] MySQLParser.SlaveThreadOptionsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.slaveThreadOptions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSlaveThreadOptions([NotNull] MySQLParser.SlaveThreadOptionsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.slaveThreadOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSlaveThreadOption([NotNull] MySQLParser.SlaveThreadOptionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.slaveThreadOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSlaveThreadOption([NotNull] MySQLParser.SlaveThreadOptionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.groupReplication"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGroupReplication([NotNull] MySQLParser.GroupReplicationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.groupReplication"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGroupReplication([NotNull] MySQLParser.GroupReplicationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.preparedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPreparedStatement([NotNull] MySQLParser.PreparedStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.preparedStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPreparedStatement([NotNull] MySQLParser.PreparedStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.executeStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExecuteStatement([NotNull] MySQLParser.ExecuteStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.executeStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExecuteStatement([NotNull] MySQLParser.ExecuteStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.executeVarList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExecuteVarList([NotNull] MySQLParser.ExecuteVarListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.executeVarList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExecuteVarList([NotNull] MySQLParser.ExecuteVarListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.cloneStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCloneStatement([NotNull] MySQLParser.CloneStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.cloneStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCloneStatement([NotNull] MySQLParser.CloneStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.dataDirSSL"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDataDirSSL([NotNull] MySQLParser.DataDirSSLContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.dataDirSSL"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDataDirSSL([NotNull] MySQLParser.DataDirSSLContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.ssl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSsl([NotNull] MySQLParser.SslContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.ssl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSsl([NotNull] MySQLParser.SslContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.accountManagementStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAccountManagementStatement([NotNull] MySQLParser.AccountManagementStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.accountManagementStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAccountManagementStatement([NotNull] MySQLParser.AccountManagementStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.alterUser"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlterUser([NotNull] MySQLParser.AlterUserContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.alterUser"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlterUser([NotNull] MySQLParser.AlterUserContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.alterUserTail"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlterUserTail([NotNull] MySQLParser.AlterUserTailContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.alterUserTail"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlterUserTail([NotNull] MySQLParser.AlterUserTailContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.createUser"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreateUser([NotNull] MySQLParser.CreateUserContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.createUser"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreateUser([NotNull] MySQLParser.CreateUserContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.createUserTail"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreateUserTail([NotNull] MySQLParser.CreateUserTailContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.createUserTail"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreateUserTail([NotNull] MySQLParser.CreateUserTailContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.defaultRoleClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDefaultRoleClause([NotNull] MySQLParser.DefaultRoleClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.defaultRoleClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDefaultRoleClause([NotNull] MySQLParser.DefaultRoleClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.requireClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRequireClause([NotNull] MySQLParser.RequireClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.requireClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRequireClause([NotNull] MySQLParser.RequireClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.connectOptions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConnectOptions([NotNull] MySQLParser.ConnectOptionsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.connectOptions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConnectOptions([NotNull] MySQLParser.ConnectOptionsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.accountLockPasswordExpireOptions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAccountLockPasswordExpireOptions([NotNull] MySQLParser.AccountLockPasswordExpireOptionsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.accountLockPasswordExpireOptions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAccountLockPasswordExpireOptions([NotNull] MySQLParser.AccountLockPasswordExpireOptionsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.dropUser"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDropUser([NotNull] MySQLParser.DropUserContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.dropUser"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDropUser([NotNull] MySQLParser.DropUserContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.grant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGrant([NotNull] MySQLParser.GrantContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.grant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGrant([NotNull] MySQLParser.GrantContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.grantTargetList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGrantTargetList([NotNull] MySQLParser.GrantTargetListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.grantTargetList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGrantTargetList([NotNull] MySQLParser.GrantTargetListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.grantOptions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGrantOptions([NotNull] MySQLParser.GrantOptionsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.grantOptions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGrantOptions([NotNull] MySQLParser.GrantOptionsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.exceptRoleList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExceptRoleList([NotNull] MySQLParser.ExceptRoleListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.exceptRoleList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExceptRoleList([NotNull] MySQLParser.ExceptRoleListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.withRoles"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWithRoles([NotNull] MySQLParser.WithRolesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.withRoles"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWithRoles([NotNull] MySQLParser.WithRolesContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.grantAs"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGrantAs([NotNull] MySQLParser.GrantAsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.grantAs"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGrantAs([NotNull] MySQLParser.GrantAsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.versionedRequireClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVersionedRequireClause([NotNull] MySQLParser.VersionedRequireClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.versionedRequireClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVersionedRequireClause([NotNull] MySQLParser.VersionedRequireClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.renameUser"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRenameUser([NotNull] MySQLParser.RenameUserContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.renameUser"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRenameUser([NotNull] MySQLParser.RenameUserContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.revoke"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRevoke([NotNull] MySQLParser.RevokeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.revoke"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRevoke([NotNull] MySQLParser.RevokeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.onTypeTo"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOnTypeTo([NotNull] MySQLParser.OnTypeToContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.onTypeTo"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOnTypeTo([NotNull] MySQLParser.OnTypeToContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.aclType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAclType([NotNull] MySQLParser.AclTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.aclType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAclType([NotNull] MySQLParser.AclTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.setPassword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSetPassword([NotNull] MySQLParser.SetPasswordContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.setPassword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSetPassword([NotNull] MySQLParser.SetPasswordContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.roleOrPrivilegesList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRoleOrPrivilegesList([NotNull] MySQLParser.RoleOrPrivilegesListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.roleOrPrivilegesList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRoleOrPrivilegesList([NotNull] MySQLParser.RoleOrPrivilegesListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.roleOrPrivilege"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRoleOrPrivilege([NotNull] MySQLParser.RoleOrPrivilegeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.roleOrPrivilege"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRoleOrPrivilege([NotNull] MySQLParser.RoleOrPrivilegeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.grantIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGrantIdentifier([NotNull] MySQLParser.GrantIdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.grantIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGrantIdentifier([NotNull] MySQLParser.GrantIdentifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.requireList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRequireList([NotNull] MySQLParser.RequireListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.requireList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRequireList([NotNull] MySQLParser.RequireListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.requireListElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRequireListElement([NotNull] MySQLParser.RequireListElementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.requireListElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRequireListElement([NotNull] MySQLParser.RequireListElementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.grantOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGrantOption([NotNull] MySQLParser.GrantOptionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.grantOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGrantOption([NotNull] MySQLParser.GrantOptionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.setRole"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSetRole([NotNull] MySQLParser.SetRoleContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.setRole"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSetRole([NotNull] MySQLParser.SetRoleContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.roleList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRoleList([NotNull] MySQLParser.RoleListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.roleList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRoleList([NotNull] MySQLParser.RoleListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.role"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRole([NotNull] MySQLParser.RoleContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.role"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRole([NotNull] MySQLParser.RoleContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.tableAdministrationStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTableAdministrationStatement([NotNull] MySQLParser.TableAdministrationStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.tableAdministrationStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTableAdministrationStatement([NotNull] MySQLParser.TableAdministrationStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.histogram"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHistogram([NotNull] MySQLParser.HistogramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.histogram"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHistogram([NotNull] MySQLParser.HistogramContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.checkOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCheckOption([NotNull] MySQLParser.CheckOptionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.checkOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCheckOption([NotNull] MySQLParser.CheckOptionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.repairType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRepairType([NotNull] MySQLParser.RepairTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.repairType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRepairType([NotNull] MySQLParser.RepairTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.installUninstallStatment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInstallUninstallStatment([NotNull] MySQLParser.InstallUninstallStatmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.installUninstallStatment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInstallUninstallStatment([NotNull] MySQLParser.InstallUninstallStatmentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.setStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSetStatement([NotNull] MySQLParser.SetStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.setStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSetStatement([NotNull] MySQLParser.SetStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.optionValueNoOptionType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOptionValueNoOptionType([NotNull] MySQLParser.OptionValueNoOptionTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.optionValueNoOptionType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOptionValueNoOptionType([NotNull] MySQLParser.OptionValueNoOptionTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.setSystemVariable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSetSystemVariable([NotNull] MySQLParser.SetSystemVariableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.setSystemVariable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSetSystemVariable([NotNull] MySQLParser.SetSystemVariableContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.optionValueFollowingOptionType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOptionValueFollowingOptionType([NotNull] MySQLParser.OptionValueFollowingOptionTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.optionValueFollowingOptionType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOptionValueFollowingOptionType([NotNull] MySQLParser.OptionValueFollowingOptionTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.setExprOrDefault"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSetExprOrDefault([NotNull] MySQLParser.SetExprOrDefaultContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.setExprOrDefault"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSetExprOrDefault([NotNull] MySQLParser.SetExprOrDefaultContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.optionValueList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOptionValueList([NotNull] MySQLParser.OptionValueListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.optionValueList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOptionValueList([NotNull] MySQLParser.OptionValueListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.optionValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOptionValue([NotNull] MySQLParser.OptionValueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.optionValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOptionValue([NotNull] MySQLParser.OptionValueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.showStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterShowStatement([NotNull] MySQLParser.ShowStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.showStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitShowStatement([NotNull] MySQLParser.ShowStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.showCommandType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterShowCommandType([NotNull] MySQLParser.ShowCommandTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.showCommandType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitShowCommandType([NotNull] MySQLParser.ShowCommandTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.nonBlocking"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNonBlocking([NotNull] MySQLParser.NonBlockingContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.nonBlocking"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNonBlocking([NotNull] MySQLParser.NonBlockingContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.fromOrIn"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFromOrIn([NotNull] MySQLParser.FromOrInContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.fromOrIn"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFromOrIn([NotNull] MySQLParser.FromOrInContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.inDb"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInDb([NotNull] MySQLParser.InDbContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.inDb"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInDb([NotNull] MySQLParser.InDbContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.profileType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProfileType([NotNull] MySQLParser.ProfileTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.profileType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProfileType([NotNull] MySQLParser.ProfileTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.otherAdministrativeStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOtherAdministrativeStatement([NotNull] MySQLParser.OtherAdministrativeStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.otherAdministrativeStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOtherAdministrativeStatement([NotNull] MySQLParser.OtherAdministrativeStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.keyCacheListOrParts"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterKeyCacheListOrParts([NotNull] MySQLParser.KeyCacheListOrPartsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.keyCacheListOrParts"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitKeyCacheListOrParts([NotNull] MySQLParser.KeyCacheListOrPartsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.keyCacheList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterKeyCacheList([NotNull] MySQLParser.KeyCacheListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.keyCacheList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitKeyCacheList([NotNull] MySQLParser.KeyCacheListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.assignToKeycache"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignToKeycache([NotNull] MySQLParser.AssignToKeycacheContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.assignToKeycache"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignToKeycache([NotNull] MySQLParser.AssignToKeycacheContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.assignToKeycachePartition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignToKeycachePartition([NotNull] MySQLParser.AssignToKeycachePartitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.assignToKeycachePartition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignToKeycachePartition([NotNull] MySQLParser.AssignToKeycachePartitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.cacheKeyList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCacheKeyList([NotNull] MySQLParser.CacheKeyListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.cacheKeyList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCacheKeyList([NotNull] MySQLParser.CacheKeyListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.keyUsageElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterKeyUsageElement([NotNull] MySQLParser.KeyUsageElementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.keyUsageElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitKeyUsageElement([NotNull] MySQLParser.KeyUsageElementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.keyUsageList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterKeyUsageList([NotNull] MySQLParser.KeyUsageListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.keyUsageList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitKeyUsageList([NotNull] MySQLParser.KeyUsageListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.flushOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFlushOption([NotNull] MySQLParser.FlushOptionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.flushOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFlushOption([NotNull] MySQLParser.FlushOptionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.logType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLogType([NotNull] MySQLParser.LogTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.logType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLogType([NotNull] MySQLParser.LogTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.flushTables"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFlushTables([NotNull] MySQLParser.FlushTablesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.flushTables"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFlushTables([NotNull] MySQLParser.FlushTablesContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.flushTablesOptions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFlushTablesOptions([NotNull] MySQLParser.FlushTablesOptionsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.flushTablesOptions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFlushTablesOptions([NotNull] MySQLParser.FlushTablesOptionsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.preloadTail"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPreloadTail([NotNull] MySQLParser.PreloadTailContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.preloadTail"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPreloadTail([NotNull] MySQLParser.PreloadTailContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.preloadList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPreloadList([NotNull] MySQLParser.PreloadListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.preloadList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPreloadList([NotNull] MySQLParser.PreloadListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.preloadKeys"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPreloadKeys([NotNull] MySQLParser.PreloadKeysContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.preloadKeys"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPreloadKeys([NotNull] MySQLParser.PreloadKeysContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.adminPartition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAdminPartition([NotNull] MySQLParser.AdminPartitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.adminPartition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAdminPartition([NotNull] MySQLParser.AdminPartitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.resourceGroupManagement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterResourceGroupManagement([NotNull] MySQLParser.ResourceGroupManagementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.resourceGroupManagement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitResourceGroupManagement([NotNull] MySQLParser.ResourceGroupManagementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.createResourceGroup"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreateResourceGroup([NotNull] MySQLParser.CreateResourceGroupContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.createResourceGroup"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreateResourceGroup([NotNull] MySQLParser.CreateResourceGroupContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.resourceGroupVcpuList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterResourceGroupVcpuList([NotNull] MySQLParser.ResourceGroupVcpuListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.resourceGroupVcpuList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitResourceGroupVcpuList([NotNull] MySQLParser.ResourceGroupVcpuListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.vcpuNumOrRange"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVcpuNumOrRange([NotNull] MySQLParser.VcpuNumOrRangeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.vcpuNumOrRange"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVcpuNumOrRange([NotNull] MySQLParser.VcpuNumOrRangeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.resourceGroupPriority"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterResourceGroupPriority([NotNull] MySQLParser.ResourceGroupPriorityContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.resourceGroupPriority"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitResourceGroupPriority([NotNull] MySQLParser.ResourceGroupPriorityContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.resourceGroupEnableDisable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterResourceGroupEnableDisable([NotNull] MySQLParser.ResourceGroupEnableDisableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.resourceGroupEnableDisable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitResourceGroupEnableDisable([NotNull] MySQLParser.ResourceGroupEnableDisableContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.alterResourceGroup"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlterResourceGroup([NotNull] MySQLParser.AlterResourceGroupContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.alterResourceGroup"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlterResourceGroup([NotNull] MySQLParser.AlterResourceGroupContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.setResourceGroup"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSetResourceGroup([NotNull] MySQLParser.SetResourceGroupContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.setResourceGroup"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSetResourceGroup([NotNull] MySQLParser.SetResourceGroupContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.threadIdList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterThreadIdList([NotNull] MySQLParser.ThreadIdListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.threadIdList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitThreadIdList([NotNull] MySQLParser.ThreadIdListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.dropResourceGroup"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDropResourceGroup([NotNull] MySQLParser.DropResourceGroupContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.dropResourceGroup"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDropResourceGroup([NotNull] MySQLParser.DropResourceGroupContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.utilityStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUtilityStatement([NotNull] MySQLParser.UtilityStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.utilityStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUtilityStatement([NotNull] MySQLParser.UtilityStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.describeCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDescribeCommand([NotNull] MySQLParser.DescribeCommandContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.describeCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDescribeCommand([NotNull] MySQLParser.DescribeCommandContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.explainCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExplainCommand([NotNull] MySQLParser.ExplainCommandContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.explainCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExplainCommand([NotNull] MySQLParser.ExplainCommandContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.explainableStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExplainableStatement([NotNull] MySQLParser.ExplainableStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.explainableStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExplainableStatement([NotNull] MySQLParser.ExplainableStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.helpCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHelpCommand([NotNull] MySQLParser.HelpCommandContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.helpCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHelpCommand([NotNull] MySQLParser.HelpCommandContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.useCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUseCommand([NotNull] MySQLParser.UseCommandContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.useCommand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUseCommand([NotNull] MySQLParser.UseCommandContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.restartServer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRestartServer([NotNull] MySQLParser.RestartServerContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.restartServer"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRestartServer([NotNull] MySQLParser.RestartServerContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>exprOr</c>
	/// labeled alternative in <see cref="MySQLParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprOr([NotNull] MySQLParser.ExprOrContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>exprOr</c>
	/// labeled alternative in <see cref="MySQLParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprOr([NotNull] MySQLParser.ExprOrContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>exprNot</c>
	/// labeled alternative in <see cref="MySQLParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprNot([NotNull] MySQLParser.ExprNotContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>exprNot</c>
	/// labeled alternative in <see cref="MySQLParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprNot([NotNull] MySQLParser.ExprNotContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>exprIs</c>
	/// labeled alternative in <see cref="MySQLParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprIs([NotNull] MySQLParser.ExprIsContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>exprIs</c>
	/// labeled alternative in <see cref="MySQLParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprIs([NotNull] MySQLParser.ExprIsContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>exprAnd</c>
	/// labeled alternative in <see cref="MySQLParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprAnd([NotNull] MySQLParser.ExprAndContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>exprAnd</c>
	/// labeled alternative in <see cref="MySQLParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprAnd([NotNull] MySQLParser.ExprAndContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>exprXor</c>
	/// labeled alternative in <see cref="MySQLParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprXor([NotNull] MySQLParser.ExprXorContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>exprXor</c>
	/// labeled alternative in <see cref="MySQLParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprXor([NotNull] MySQLParser.ExprXorContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>primaryExprPredicate</c>
	/// labeled alternative in <see cref="MySQLParser.boolPri"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimaryExprPredicate([NotNull] MySQLParser.PrimaryExprPredicateContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>primaryExprPredicate</c>
	/// labeled alternative in <see cref="MySQLParser.boolPri"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimaryExprPredicate([NotNull] MySQLParser.PrimaryExprPredicateContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>primaryExprCompare</c>
	/// labeled alternative in <see cref="MySQLParser.boolPri"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimaryExprCompare([NotNull] MySQLParser.PrimaryExprCompareContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>primaryExprCompare</c>
	/// labeled alternative in <see cref="MySQLParser.boolPri"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimaryExprCompare([NotNull] MySQLParser.PrimaryExprCompareContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>primaryExprAllAny</c>
	/// labeled alternative in <see cref="MySQLParser.boolPri"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimaryExprAllAny([NotNull] MySQLParser.PrimaryExprAllAnyContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>primaryExprAllAny</c>
	/// labeled alternative in <see cref="MySQLParser.boolPri"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimaryExprAllAny([NotNull] MySQLParser.PrimaryExprAllAnyContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>primaryExprIsNull</c>
	/// labeled alternative in <see cref="MySQLParser.boolPri"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrimaryExprIsNull([NotNull] MySQLParser.PrimaryExprIsNullContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>primaryExprIsNull</c>
	/// labeled alternative in <see cref="MySQLParser.boolPri"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrimaryExprIsNull([NotNull] MySQLParser.PrimaryExprIsNullContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.compOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCompOp([NotNull] MySQLParser.CompOpContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.compOp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCompOp([NotNull] MySQLParser.CompOpContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPredicate([NotNull] MySQLParser.PredicateContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.predicate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPredicate([NotNull] MySQLParser.PredicateContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>predicateExprIn</c>
	/// labeled alternative in <see cref="MySQLParser.predicateOperations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPredicateExprIn([NotNull] MySQLParser.PredicateExprInContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>predicateExprIn</c>
	/// labeled alternative in <see cref="MySQLParser.predicateOperations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPredicateExprIn([NotNull] MySQLParser.PredicateExprInContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>predicateExprBetween</c>
	/// labeled alternative in <see cref="MySQLParser.predicateOperations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPredicateExprBetween([NotNull] MySQLParser.PredicateExprBetweenContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>predicateExprBetween</c>
	/// labeled alternative in <see cref="MySQLParser.predicateOperations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPredicateExprBetween([NotNull] MySQLParser.PredicateExprBetweenContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>predicateExprLike</c>
	/// labeled alternative in <see cref="MySQLParser.predicateOperations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPredicateExprLike([NotNull] MySQLParser.PredicateExprLikeContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>predicateExprLike</c>
	/// labeled alternative in <see cref="MySQLParser.predicateOperations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPredicateExprLike([NotNull] MySQLParser.PredicateExprLikeContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>predicateExprRegex</c>
	/// labeled alternative in <see cref="MySQLParser.predicateOperations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPredicateExprRegex([NotNull] MySQLParser.PredicateExprRegexContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>predicateExprRegex</c>
	/// labeled alternative in <see cref="MySQLParser.predicateOperations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPredicateExprRegex([NotNull] MySQLParser.PredicateExprRegexContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.bitExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBitExpr([NotNull] MySQLParser.BitExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.bitExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBitExpr([NotNull] MySQLParser.BitExprContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>simpleExprConvert</c>
	/// labeled alternative in <see cref="MySQLParser.simpleExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimpleExprConvert([NotNull] MySQLParser.SimpleExprConvertContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>simpleExprConvert</c>
	/// labeled alternative in <see cref="MySQLParser.simpleExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimpleExprConvert([NotNull] MySQLParser.SimpleExprConvertContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>simpleExprVariable</c>
	/// labeled alternative in <see cref="MySQLParser.simpleExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimpleExprVariable([NotNull] MySQLParser.SimpleExprVariableContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>simpleExprVariable</c>
	/// labeled alternative in <see cref="MySQLParser.simpleExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimpleExprVariable([NotNull] MySQLParser.SimpleExprVariableContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>simpleExprCast</c>
	/// labeled alternative in <see cref="MySQLParser.simpleExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimpleExprCast([NotNull] MySQLParser.SimpleExprCastContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>simpleExprCast</c>
	/// labeled alternative in <see cref="MySQLParser.simpleExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimpleExprCast([NotNull] MySQLParser.SimpleExprCastContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>simpleExprUnary</c>
	/// labeled alternative in <see cref="MySQLParser.simpleExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimpleExprUnary([NotNull] MySQLParser.SimpleExprUnaryContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>simpleExprUnary</c>
	/// labeled alternative in <see cref="MySQLParser.simpleExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimpleExprUnary([NotNull] MySQLParser.SimpleExprUnaryContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>simpleExprOdbc</c>
	/// labeled alternative in <see cref="MySQLParser.simpleExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimpleExprOdbc([NotNull] MySQLParser.SimpleExprOdbcContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>simpleExprOdbc</c>
	/// labeled alternative in <see cref="MySQLParser.simpleExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimpleExprOdbc([NotNull] MySQLParser.SimpleExprOdbcContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>simpleExprRuntimeFunction</c>
	/// labeled alternative in <see cref="MySQLParser.simpleExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimpleExprRuntimeFunction([NotNull] MySQLParser.SimpleExprRuntimeFunctionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>simpleExprRuntimeFunction</c>
	/// labeled alternative in <see cref="MySQLParser.simpleExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimpleExprRuntimeFunction([NotNull] MySQLParser.SimpleExprRuntimeFunctionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>simpleExprFunction</c>
	/// labeled alternative in <see cref="MySQLParser.simpleExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimpleExprFunction([NotNull] MySQLParser.SimpleExprFunctionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>simpleExprFunction</c>
	/// labeled alternative in <see cref="MySQLParser.simpleExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimpleExprFunction([NotNull] MySQLParser.SimpleExprFunctionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>simpleExprCollate</c>
	/// labeled alternative in <see cref="MySQLParser.simpleExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimpleExprCollate([NotNull] MySQLParser.SimpleExprCollateContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>simpleExprCollate</c>
	/// labeled alternative in <see cref="MySQLParser.simpleExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimpleExprCollate([NotNull] MySQLParser.SimpleExprCollateContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>simpleExprMatch</c>
	/// labeled alternative in <see cref="MySQLParser.simpleExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimpleExprMatch([NotNull] MySQLParser.SimpleExprMatchContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>simpleExprMatch</c>
	/// labeled alternative in <see cref="MySQLParser.simpleExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimpleExprMatch([NotNull] MySQLParser.SimpleExprMatchContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>simpleExprWindowingFunction</c>
	/// labeled alternative in <see cref="MySQLParser.simpleExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimpleExprWindowingFunction([NotNull] MySQLParser.SimpleExprWindowingFunctionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>simpleExprWindowingFunction</c>
	/// labeled alternative in <see cref="MySQLParser.simpleExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimpleExprWindowingFunction([NotNull] MySQLParser.SimpleExprWindowingFunctionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>simpleExprBinary</c>
	/// labeled alternative in <see cref="MySQLParser.simpleExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimpleExprBinary([NotNull] MySQLParser.SimpleExprBinaryContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>simpleExprBinary</c>
	/// labeled alternative in <see cref="MySQLParser.simpleExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimpleExprBinary([NotNull] MySQLParser.SimpleExprBinaryContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>simpleExprColumnRef</c>
	/// labeled alternative in <see cref="MySQLParser.simpleExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimpleExprColumnRef([NotNull] MySQLParser.SimpleExprColumnRefContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>simpleExprColumnRef</c>
	/// labeled alternative in <see cref="MySQLParser.simpleExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimpleExprColumnRef([NotNull] MySQLParser.SimpleExprColumnRefContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>simpleExprParamMarker</c>
	/// labeled alternative in <see cref="MySQLParser.simpleExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimpleExprParamMarker([NotNull] MySQLParser.SimpleExprParamMarkerContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>simpleExprParamMarker</c>
	/// labeled alternative in <see cref="MySQLParser.simpleExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimpleExprParamMarker([NotNull] MySQLParser.SimpleExprParamMarkerContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>simpleExprSum</c>
	/// labeled alternative in <see cref="MySQLParser.simpleExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimpleExprSum([NotNull] MySQLParser.SimpleExprSumContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>simpleExprSum</c>
	/// labeled alternative in <see cref="MySQLParser.simpleExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimpleExprSum([NotNull] MySQLParser.SimpleExprSumContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>simpleExprConvertUsing</c>
	/// labeled alternative in <see cref="MySQLParser.simpleExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimpleExprConvertUsing([NotNull] MySQLParser.SimpleExprConvertUsingContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>simpleExprConvertUsing</c>
	/// labeled alternative in <see cref="MySQLParser.simpleExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimpleExprConvertUsing([NotNull] MySQLParser.SimpleExprConvertUsingContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>simpleExprSubQuery</c>
	/// labeled alternative in <see cref="MySQLParser.simpleExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimpleExprSubQuery([NotNull] MySQLParser.SimpleExprSubQueryContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>simpleExprSubQuery</c>
	/// labeled alternative in <see cref="MySQLParser.simpleExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimpleExprSubQuery([NotNull] MySQLParser.SimpleExprSubQueryContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>simpleExprGroupingOperation</c>
	/// labeled alternative in <see cref="MySQLParser.simpleExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimpleExprGroupingOperation([NotNull] MySQLParser.SimpleExprGroupingOperationContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>simpleExprGroupingOperation</c>
	/// labeled alternative in <see cref="MySQLParser.simpleExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimpleExprGroupingOperation([NotNull] MySQLParser.SimpleExprGroupingOperationContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>simpleExprNot</c>
	/// labeled alternative in <see cref="MySQLParser.simpleExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimpleExprNot([NotNull] MySQLParser.SimpleExprNotContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>simpleExprNot</c>
	/// labeled alternative in <see cref="MySQLParser.simpleExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimpleExprNot([NotNull] MySQLParser.SimpleExprNotContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>simpleExprValues</c>
	/// labeled alternative in <see cref="MySQLParser.simpleExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimpleExprValues([NotNull] MySQLParser.SimpleExprValuesContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>simpleExprValues</c>
	/// labeled alternative in <see cref="MySQLParser.simpleExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimpleExprValues([NotNull] MySQLParser.SimpleExprValuesContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>simpleExprDefault</c>
	/// labeled alternative in <see cref="MySQLParser.simpleExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimpleExprDefault([NotNull] MySQLParser.SimpleExprDefaultContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>simpleExprDefault</c>
	/// labeled alternative in <see cref="MySQLParser.simpleExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimpleExprDefault([NotNull] MySQLParser.SimpleExprDefaultContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>simpleExprList</c>
	/// labeled alternative in <see cref="MySQLParser.simpleExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimpleExprList([NotNull] MySQLParser.SimpleExprListContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>simpleExprList</c>
	/// labeled alternative in <see cref="MySQLParser.simpleExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimpleExprList([NotNull] MySQLParser.SimpleExprListContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>simpleExprInterval</c>
	/// labeled alternative in <see cref="MySQLParser.simpleExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimpleExprInterval([NotNull] MySQLParser.SimpleExprIntervalContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>simpleExprInterval</c>
	/// labeled alternative in <see cref="MySQLParser.simpleExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimpleExprInterval([NotNull] MySQLParser.SimpleExprIntervalContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>simpleExprCase</c>
	/// labeled alternative in <see cref="MySQLParser.simpleExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimpleExprCase([NotNull] MySQLParser.SimpleExprCaseContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>simpleExprCase</c>
	/// labeled alternative in <see cref="MySQLParser.simpleExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimpleExprCase([NotNull] MySQLParser.SimpleExprCaseContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>simpleExprConcat</c>
	/// labeled alternative in <see cref="MySQLParser.simpleExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimpleExprConcat([NotNull] MySQLParser.SimpleExprConcatContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>simpleExprConcat</c>
	/// labeled alternative in <see cref="MySQLParser.simpleExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimpleExprConcat([NotNull] MySQLParser.SimpleExprConcatContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>simpleExprLiteral</c>
	/// labeled alternative in <see cref="MySQLParser.simpleExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimpleExprLiteral([NotNull] MySQLParser.SimpleExprLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>simpleExprLiteral</c>
	/// labeled alternative in <see cref="MySQLParser.simpleExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimpleExprLiteral([NotNull] MySQLParser.SimpleExprLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.arrayCast"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArrayCast([NotNull] MySQLParser.ArrayCastContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.arrayCast"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArrayCast([NotNull] MySQLParser.ArrayCastContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.jsonOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterJsonOperator([NotNull] MySQLParser.JsonOperatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.jsonOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitJsonOperator([NotNull] MySQLParser.JsonOperatorContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.sumExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSumExpr([NotNull] MySQLParser.SumExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.sumExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSumExpr([NotNull] MySQLParser.SumExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.groupingOperation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGroupingOperation([NotNull] MySQLParser.GroupingOperationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.groupingOperation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGroupingOperation([NotNull] MySQLParser.GroupingOperationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.windowFunctionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWindowFunctionCall([NotNull] MySQLParser.WindowFunctionCallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.windowFunctionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWindowFunctionCall([NotNull] MySQLParser.WindowFunctionCallContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.windowingClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWindowingClause([NotNull] MySQLParser.WindowingClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.windowingClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWindowingClause([NotNull] MySQLParser.WindowingClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.leadLagInfo"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLeadLagInfo([NotNull] MySQLParser.LeadLagInfoContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.leadLagInfo"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLeadLagInfo([NotNull] MySQLParser.LeadLagInfoContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.nullTreatment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNullTreatment([NotNull] MySQLParser.NullTreatmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.nullTreatment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNullTreatment([NotNull] MySQLParser.NullTreatmentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.jsonFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterJsonFunction([NotNull] MySQLParser.JsonFunctionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.jsonFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitJsonFunction([NotNull] MySQLParser.JsonFunctionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.inSumExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInSumExpr([NotNull] MySQLParser.InSumExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.inSumExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInSumExpr([NotNull] MySQLParser.InSumExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.identListArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentListArg([NotNull] MySQLParser.IdentListArgContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.identListArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentListArg([NotNull] MySQLParser.IdentListArgContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.identList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentList([NotNull] MySQLParser.IdentListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.identList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentList([NotNull] MySQLParser.IdentListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.fulltextOptions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFulltextOptions([NotNull] MySQLParser.FulltextOptionsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.fulltextOptions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFulltextOptions([NotNull] MySQLParser.FulltextOptionsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.runtimeFunctionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRuntimeFunctionCall([NotNull] MySQLParser.RuntimeFunctionCallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.runtimeFunctionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRuntimeFunctionCall([NotNull] MySQLParser.RuntimeFunctionCallContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.geometryFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGeometryFunction([NotNull] MySQLParser.GeometryFunctionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.geometryFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGeometryFunction([NotNull] MySQLParser.GeometryFunctionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.timeFunctionParameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTimeFunctionParameters([NotNull] MySQLParser.TimeFunctionParametersContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.timeFunctionParameters"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTimeFunctionParameters([NotNull] MySQLParser.TimeFunctionParametersContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.fractionalPrecision"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFractionalPrecision([NotNull] MySQLParser.FractionalPrecisionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.fractionalPrecision"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFractionalPrecision([NotNull] MySQLParser.FractionalPrecisionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.weightStringLevels"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWeightStringLevels([NotNull] MySQLParser.WeightStringLevelsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.weightStringLevels"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWeightStringLevels([NotNull] MySQLParser.WeightStringLevelsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.weightStringLevelListItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWeightStringLevelListItem([NotNull] MySQLParser.WeightStringLevelListItemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.weightStringLevelListItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWeightStringLevelListItem([NotNull] MySQLParser.WeightStringLevelListItemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.dateTimeTtype"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDateTimeTtype([NotNull] MySQLParser.DateTimeTtypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.dateTimeTtype"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDateTimeTtype([NotNull] MySQLParser.DateTimeTtypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.trimFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTrimFunction([NotNull] MySQLParser.TrimFunctionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.trimFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTrimFunction([NotNull] MySQLParser.TrimFunctionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.substringFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSubstringFunction([NotNull] MySQLParser.SubstringFunctionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.substringFunction"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSubstringFunction([NotNull] MySQLParser.SubstringFunctionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.functionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionCall([NotNull] MySQLParser.FunctionCallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.functionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionCall([NotNull] MySQLParser.FunctionCallContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.udfExprList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUdfExprList([NotNull] MySQLParser.UdfExprListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.udfExprList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUdfExprList([NotNull] MySQLParser.UdfExprListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.udfExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUdfExpr([NotNull] MySQLParser.UdfExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.udfExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUdfExpr([NotNull] MySQLParser.UdfExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariable([NotNull] MySQLParser.VariableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariable([NotNull] MySQLParser.VariableContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.userVariable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUserVariable([NotNull] MySQLParser.UserVariableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.userVariable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUserVariable([NotNull] MySQLParser.UserVariableContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.systemVariable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSystemVariable([NotNull] MySQLParser.SystemVariableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.systemVariable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSystemVariable([NotNull] MySQLParser.SystemVariableContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.internalVariableName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInternalVariableName([NotNull] MySQLParser.InternalVariableNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.internalVariableName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInternalVariableName([NotNull] MySQLParser.InternalVariableNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.whenExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhenExpression([NotNull] MySQLParser.WhenExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.whenExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhenExpression([NotNull] MySQLParser.WhenExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.thenExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterThenExpression([NotNull] MySQLParser.ThenExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.thenExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitThenExpression([NotNull] MySQLParser.ThenExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.elseExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElseExpression([NotNull] MySQLParser.ElseExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.elseExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElseExpression([NotNull] MySQLParser.ElseExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.castType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCastType([NotNull] MySQLParser.CastTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.castType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCastType([NotNull] MySQLParser.CastTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.exprList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprList([NotNull] MySQLParser.ExprListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.exprList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprList([NotNull] MySQLParser.ExprListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.charset"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCharset([NotNull] MySQLParser.CharsetContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.charset"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCharset([NotNull] MySQLParser.CharsetContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.notRule"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNotRule([NotNull] MySQLParser.NotRuleContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.notRule"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNotRule([NotNull] MySQLParser.NotRuleContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.not2Rule"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNot2Rule([NotNull] MySQLParser.Not2RuleContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.not2Rule"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNot2Rule([NotNull] MySQLParser.Not2RuleContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.interval"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInterval([NotNull] MySQLParser.IntervalContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.interval"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInterval([NotNull] MySQLParser.IntervalContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.intervalTimeStamp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIntervalTimeStamp([NotNull] MySQLParser.IntervalTimeStampContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.intervalTimeStamp"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIntervalTimeStamp([NotNull] MySQLParser.IntervalTimeStampContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.exprListWithParentheses"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprListWithParentheses([NotNull] MySQLParser.ExprListWithParenthesesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.exprListWithParentheses"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprListWithParentheses([NotNull] MySQLParser.ExprListWithParenthesesContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.exprWithParentheses"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprWithParentheses([NotNull] MySQLParser.ExprWithParenthesesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.exprWithParentheses"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprWithParentheses([NotNull] MySQLParser.ExprWithParenthesesContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.simpleExprWithParentheses"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimpleExprWithParentheses([NotNull] MySQLParser.SimpleExprWithParenthesesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.simpleExprWithParentheses"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimpleExprWithParentheses([NotNull] MySQLParser.SimpleExprWithParenthesesContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.orderList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOrderList([NotNull] MySQLParser.OrderListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.orderList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOrderList([NotNull] MySQLParser.OrderListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.orderExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOrderExpression([NotNull] MySQLParser.OrderExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.orderExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOrderExpression([NotNull] MySQLParser.OrderExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.groupList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGroupList([NotNull] MySQLParser.GroupListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.groupList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGroupList([NotNull] MySQLParser.GroupListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.groupingExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGroupingExpression([NotNull] MySQLParser.GroupingExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.groupingExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGroupingExpression([NotNull] MySQLParser.GroupingExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.channel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterChannel([NotNull] MySQLParser.ChannelContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.channel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitChannel([NotNull] MySQLParser.ChannelContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.compoundStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCompoundStatement([NotNull] MySQLParser.CompoundStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.compoundStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCompoundStatement([NotNull] MySQLParser.CompoundStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.returnStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturnStatement([NotNull] MySQLParser.ReturnStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.returnStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturnStatement([NotNull] MySQLParser.ReturnStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.ifStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfStatement([NotNull] MySQLParser.IfStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.ifStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfStatement([NotNull] MySQLParser.IfStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.ifBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfBody([NotNull] MySQLParser.IfBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.ifBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfBody([NotNull] MySQLParser.IfBodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.thenStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterThenStatement([NotNull] MySQLParser.ThenStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.thenStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitThenStatement([NotNull] MySQLParser.ThenStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.compoundStatementList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCompoundStatementList([NotNull] MySQLParser.CompoundStatementListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.compoundStatementList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCompoundStatementList([NotNull] MySQLParser.CompoundStatementListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.caseStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCaseStatement([NotNull] MySQLParser.CaseStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.caseStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCaseStatement([NotNull] MySQLParser.CaseStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.elseStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElseStatement([NotNull] MySQLParser.ElseStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.elseStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElseStatement([NotNull] MySQLParser.ElseStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.labeledBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLabeledBlock([NotNull] MySQLParser.LabeledBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.labeledBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLabeledBlock([NotNull] MySQLParser.LabeledBlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.unlabeledBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnlabeledBlock([NotNull] MySQLParser.UnlabeledBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.unlabeledBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnlabeledBlock([NotNull] MySQLParser.UnlabeledBlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.label"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLabel([NotNull] MySQLParser.LabelContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.label"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLabel([NotNull] MySQLParser.LabelContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.beginEndBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBeginEndBlock([NotNull] MySQLParser.BeginEndBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.beginEndBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBeginEndBlock([NotNull] MySQLParser.BeginEndBlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.labeledControl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLabeledControl([NotNull] MySQLParser.LabeledControlContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.labeledControl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLabeledControl([NotNull] MySQLParser.LabeledControlContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.unlabeledControl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnlabeledControl([NotNull] MySQLParser.UnlabeledControlContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.unlabeledControl"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnlabeledControl([NotNull] MySQLParser.UnlabeledControlContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.loopBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLoopBlock([NotNull] MySQLParser.LoopBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.loopBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLoopBlock([NotNull] MySQLParser.LoopBlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.whileDoBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhileDoBlock([NotNull] MySQLParser.WhileDoBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.whileDoBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhileDoBlock([NotNull] MySQLParser.WhileDoBlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.repeatUntilBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRepeatUntilBlock([NotNull] MySQLParser.RepeatUntilBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.repeatUntilBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRepeatUntilBlock([NotNull] MySQLParser.RepeatUntilBlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.spDeclarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSpDeclarations([NotNull] MySQLParser.SpDeclarationsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.spDeclarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSpDeclarations([NotNull] MySQLParser.SpDeclarationsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.spDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSpDeclaration([NotNull] MySQLParser.SpDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.spDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSpDeclaration([NotNull] MySQLParser.SpDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.variableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableDeclaration([NotNull] MySQLParser.VariableDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.variableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableDeclaration([NotNull] MySQLParser.VariableDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.conditionDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConditionDeclaration([NotNull] MySQLParser.ConditionDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.conditionDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConditionDeclaration([NotNull] MySQLParser.ConditionDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.spCondition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSpCondition([NotNull] MySQLParser.SpConditionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.spCondition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSpCondition([NotNull] MySQLParser.SpConditionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.sqlstate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSqlstate([NotNull] MySQLParser.SqlstateContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.sqlstate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSqlstate([NotNull] MySQLParser.SqlstateContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.handlerDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHandlerDeclaration([NotNull] MySQLParser.HandlerDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.handlerDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHandlerDeclaration([NotNull] MySQLParser.HandlerDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.handlerCondition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterHandlerCondition([NotNull] MySQLParser.HandlerConditionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.handlerCondition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitHandlerCondition([NotNull] MySQLParser.HandlerConditionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.cursorDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCursorDeclaration([NotNull] MySQLParser.CursorDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.cursorDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCursorDeclaration([NotNull] MySQLParser.CursorDeclarationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.iterateStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIterateStatement([NotNull] MySQLParser.IterateStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.iterateStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIterateStatement([NotNull] MySQLParser.IterateStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.leaveStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLeaveStatement([NotNull] MySQLParser.LeaveStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.leaveStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLeaveStatement([NotNull] MySQLParser.LeaveStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.getDiagnostics"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGetDiagnostics([NotNull] MySQLParser.GetDiagnosticsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.getDiagnostics"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGetDiagnostics([NotNull] MySQLParser.GetDiagnosticsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.signalAllowedExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSignalAllowedExpr([NotNull] MySQLParser.SignalAllowedExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.signalAllowedExpr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSignalAllowedExpr([NotNull] MySQLParser.SignalAllowedExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.statementInformationItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatementInformationItem([NotNull] MySQLParser.StatementInformationItemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.statementInformationItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatementInformationItem([NotNull] MySQLParser.StatementInformationItemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.conditionInformationItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConditionInformationItem([NotNull] MySQLParser.ConditionInformationItemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.conditionInformationItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConditionInformationItem([NotNull] MySQLParser.ConditionInformationItemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.signalInformationItemName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSignalInformationItemName([NotNull] MySQLParser.SignalInformationItemNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.signalInformationItemName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSignalInformationItemName([NotNull] MySQLParser.SignalInformationItemNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.signalStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSignalStatement([NotNull] MySQLParser.SignalStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.signalStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSignalStatement([NotNull] MySQLParser.SignalStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.resignalStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterResignalStatement([NotNull] MySQLParser.ResignalStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.resignalStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitResignalStatement([NotNull] MySQLParser.ResignalStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.signalInformationItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSignalInformationItem([NotNull] MySQLParser.SignalInformationItemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.signalInformationItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSignalInformationItem([NotNull] MySQLParser.SignalInformationItemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.cursorOpen"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCursorOpen([NotNull] MySQLParser.CursorOpenContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.cursorOpen"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCursorOpen([NotNull] MySQLParser.CursorOpenContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.cursorClose"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCursorClose([NotNull] MySQLParser.CursorCloseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.cursorClose"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCursorClose([NotNull] MySQLParser.CursorCloseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.cursorFetch"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCursorFetch([NotNull] MySQLParser.CursorFetchContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.cursorFetch"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCursorFetch([NotNull] MySQLParser.CursorFetchContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.schedule"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSchedule([NotNull] MySQLParser.ScheduleContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.schedule"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSchedule([NotNull] MySQLParser.ScheduleContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.columnDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterColumnDefinition([NotNull] MySQLParser.ColumnDefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.columnDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitColumnDefinition([NotNull] MySQLParser.ColumnDefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.checkOrReferences"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCheckOrReferences([NotNull] MySQLParser.CheckOrReferencesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.checkOrReferences"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCheckOrReferences([NotNull] MySQLParser.CheckOrReferencesContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.checkConstraint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCheckConstraint([NotNull] MySQLParser.CheckConstraintContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.checkConstraint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCheckConstraint([NotNull] MySQLParser.CheckConstraintContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.constraintEnforcement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstraintEnforcement([NotNull] MySQLParser.ConstraintEnforcementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.constraintEnforcement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstraintEnforcement([NotNull] MySQLParser.ConstraintEnforcementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.tableConstraintDef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTableConstraintDef([NotNull] MySQLParser.TableConstraintDefContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.tableConstraintDef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTableConstraintDef([NotNull] MySQLParser.TableConstraintDefContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.constraintName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstraintName([NotNull] MySQLParser.ConstraintNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.constraintName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstraintName([NotNull] MySQLParser.ConstraintNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.fieldDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFieldDefinition([NotNull] MySQLParser.FieldDefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.fieldDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFieldDefinition([NotNull] MySQLParser.FieldDefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.columnAttribute"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterColumnAttribute([NotNull] MySQLParser.ColumnAttributeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.columnAttribute"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitColumnAttribute([NotNull] MySQLParser.ColumnAttributeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.columnFormat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterColumnFormat([NotNull] MySQLParser.ColumnFormatContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.columnFormat"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitColumnFormat([NotNull] MySQLParser.ColumnFormatContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.storageMedia"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStorageMedia([NotNull] MySQLParser.StorageMediaContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.storageMedia"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStorageMedia([NotNull] MySQLParser.StorageMediaContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.gcolAttribute"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGcolAttribute([NotNull] MySQLParser.GcolAttributeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.gcolAttribute"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGcolAttribute([NotNull] MySQLParser.GcolAttributeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.references"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReferences([NotNull] MySQLParser.ReferencesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.references"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReferences([NotNull] MySQLParser.ReferencesContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.deleteOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeleteOption([NotNull] MySQLParser.DeleteOptionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.deleteOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeleteOption([NotNull] MySQLParser.DeleteOptionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.keyList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterKeyList([NotNull] MySQLParser.KeyListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.keyList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitKeyList([NotNull] MySQLParser.KeyListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.keyPart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterKeyPart([NotNull] MySQLParser.KeyPartContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.keyPart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitKeyPart([NotNull] MySQLParser.KeyPartContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.keyListWithExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterKeyListWithExpression([NotNull] MySQLParser.KeyListWithExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.keyListWithExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitKeyListWithExpression([NotNull] MySQLParser.KeyListWithExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.keyPartOrExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterKeyPartOrExpression([NotNull] MySQLParser.KeyPartOrExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.keyPartOrExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitKeyPartOrExpression([NotNull] MySQLParser.KeyPartOrExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.keyListVariants"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterKeyListVariants([NotNull] MySQLParser.KeyListVariantsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.keyListVariants"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitKeyListVariants([NotNull] MySQLParser.KeyListVariantsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.indexType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIndexType([NotNull] MySQLParser.IndexTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.indexType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIndexType([NotNull] MySQLParser.IndexTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.indexOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIndexOption([NotNull] MySQLParser.IndexOptionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.indexOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIndexOption([NotNull] MySQLParser.IndexOptionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.commonIndexOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCommonIndexOption([NotNull] MySQLParser.CommonIndexOptionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.commonIndexOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCommonIndexOption([NotNull] MySQLParser.CommonIndexOptionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.visibility"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVisibility([NotNull] MySQLParser.VisibilityContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.visibility"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVisibility([NotNull] MySQLParser.VisibilityContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.indexTypeClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIndexTypeClause([NotNull] MySQLParser.IndexTypeClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.indexTypeClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIndexTypeClause([NotNull] MySQLParser.IndexTypeClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.fulltextIndexOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFulltextIndexOption([NotNull] MySQLParser.FulltextIndexOptionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.fulltextIndexOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFulltextIndexOption([NotNull] MySQLParser.FulltextIndexOptionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.spatialIndexOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSpatialIndexOption([NotNull] MySQLParser.SpatialIndexOptionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.spatialIndexOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSpatialIndexOption([NotNull] MySQLParser.SpatialIndexOptionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.dataTypeDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDataTypeDefinition([NotNull] MySQLParser.DataTypeDefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.dataTypeDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDataTypeDefinition([NotNull] MySQLParser.DataTypeDefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.dataType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDataType([NotNull] MySQLParser.DataTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.dataType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDataType([NotNull] MySQLParser.DataTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.nchar"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNchar([NotNull] MySQLParser.NcharContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.nchar"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNchar([NotNull] MySQLParser.NcharContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.varchar"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarchar([NotNull] MySQLParser.VarcharContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.varchar"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarchar([NotNull] MySQLParser.VarcharContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.nvarchar"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNvarchar([NotNull] MySQLParser.NvarcharContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.nvarchar"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNvarchar([NotNull] MySQLParser.NvarcharContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.realType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRealType([NotNull] MySQLParser.RealTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.realType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRealType([NotNull] MySQLParser.RealTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.fieldLength"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFieldLength([NotNull] MySQLParser.FieldLengthContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.fieldLength"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFieldLength([NotNull] MySQLParser.FieldLengthContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.fieldOptions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFieldOptions([NotNull] MySQLParser.FieldOptionsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.fieldOptions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFieldOptions([NotNull] MySQLParser.FieldOptionsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.charsetWithOptBinary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCharsetWithOptBinary([NotNull] MySQLParser.CharsetWithOptBinaryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.charsetWithOptBinary"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCharsetWithOptBinary([NotNull] MySQLParser.CharsetWithOptBinaryContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.ascii"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAscii([NotNull] MySQLParser.AsciiContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.ascii"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAscii([NotNull] MySQLParser.AsciiContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.unicode"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnicode([NotNull] MySQLParser.UnicodeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.unicode"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnicode([NotNull] MySQLParser.UnicodeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.wsNumCodepoints"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWsNumCodepoints([NotNull] MySQLParser.WsNumCodepointsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.wsNumCodepoints"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWsNumCodepoints([NotNull] MySQLParser.WsNumCodepointsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.typeDatetimePrecision"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeDatetimePrecision([NotNull] MySQLParser.TypeDatetimePrecisionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.typeDatetimePrecision"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeDatetimePrecision([NotNull] MySQLParser.TypeDatetimePrecisionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.charsetName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCharsetName([NotNull] MySQLParser.CharsetNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.charsetName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCharsetName([NotNull] MySQLParser.CharsetNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.collationName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCollationName([NotNull] MySQLParser.CollationNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.collationName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCollationName([NotNull] MySQLParser.CollationNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.createTableOptions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreateTableOptions([NotNull] MySQLParser.CreateTableOptionsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.createTableOptions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreateTableOptions([NotNull] MySQLParser.CreateTableOptionsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.createTableOptionsSpaceSeparated"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreateTableOptionsSpaceSeparated([NotNull] MySQLParser.CreateTableOptionsSpaceSeparatedContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.createTableOptionsSpaceSeparated"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreateTableOptionsSpaceSeparated([NotNull] MySQLParser.CreateTableOptionsSpaceSeparatedContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.createTableOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreateTableOption([NotNull] MySQLParser.CreateTableOptionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.createTableOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreateTableOption([NotNull] MySQLParser.CreateTableOptionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.ternaryOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTernaryOption([NotNull] MySQLParser.TernaryOptionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.ternaryOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTernaryOption([NotNull] MySQLParser.TernaryOptionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.defaultCollation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDefaultCollation([NotNull] MySQLParser.DefaultCollationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.defaultCollation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDefaultCollation([NotNull] MySQLParser.DefaultCollationContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.defaultEncryption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDefaultEncryption([NotNull] MySQLParser.DefaultEncryptionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.defaultEncryption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDefaultEncryption([NotNull] MySQLParser.DefaultEncryptionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.defaultCharset"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDefaultCharset([NotNull] MySQLParser.DefaultCharsetContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.defaultCharset"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDefaultCharset([NotNull] MySQLParser.DefaultCharsetContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.partitionClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPartitionClause([NotNull] MySQLParser.PartitionClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.partitionClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPartitionClause([NotNull] MySQLParser.PartitionClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>partitionDefKey</c>
	/// labeled alternative in <see cref="MySQLParser.partitionTypeDef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPartitionDefKey([NotNull] MySQLParser.PartitionDefKeyContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>partitionDefKey</c>
	/// labeled alternative in <see cref="MySQLParser.partitionTypeDef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPartitionDefKey([NotNull] MySQLParser.PartitionDefKeyContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>partitionDefHash</c>
	/// labeled alternative in <see cref="MySQLParser.partitionTypeDef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPartitionDefHash([NotNull] MySQLParser.PartitionDefHashContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>partitionDefHash</c>
	/// labeled alternative in <see cref="MySQLParser.partitionTypeDef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPartitionDefHash([NotNull] MySQLParser.PartitionDefHashContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>partitionDefRangeList</c>
	/// labeled alternative in <see cref="MySQLParser.partitionTypeDef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPartitionDefRangeList([NotNull] MySQLParser.PartitionDefRangeListContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>partitionDefRangeList</c>
	/// labeled alternative in <see cref="MySQLParser.partitionTypeDef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPartitionDefRangeList([NotNull] MySQLParser.PartitionDefRangeListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.subPartitions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSubPartitions([NotNull] MySQLParser.SubPartitionsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.subPartitions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSubPartitions([NotNull] MySQLParser.SubPartitionsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.partitionKeyAlgorithm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPartitionKeyAlgorithm([NotNull] MySQLParser.PartitionKeyAlgorithmContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.partitionKeyAlgorithm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPartitionKeyAlgorithm([NotNull] MySQLParser.PartitionKeyAlgorithmContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.partitionDefinitions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPartitionDefinitions([NotNull] MySQLParser.PartitionDefinitionsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.partitionDefinitions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPartitionDefinitions([NotNull] MySQLParser.PartitionDefinitionsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.partitionDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPartitionDefinition([NotNull] MySQLParser.PartitionDefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.partitionDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPartitionDefinition([NotNull] MySQLParser.PartitionDefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.partitionValuesIn"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPartitionValuesIn([NotNull] MySQLParser.PartitionValuesInContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.partitionValuesIn"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPartitionValuesIn([NotNull] MySQLParser.PartitionValuesInContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.partitionOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPartitionOption([NotNull] MySQLParser.PartitionOptionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.partitionOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPartitionOption([NotNull] MySQLParser.PartitionOptionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.subpartitionDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSubpartitionDefinition([NotNull] MySQLParser.SubpartitionDefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.subpartitionDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSubpartitionDefinition([NotNull] MySQLParser.SubpartitionDefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.partitionValueItemListParen"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPartitionValueItemListParen([NotNull] MySQLParser.PartitionValueItemListParenContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.partitionValueItemListParen"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPartitionValueItemListParen([NotNull] MySQLParser.PartitionValueItemListParenContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.partitionValueItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPartitionValueItem([NotNull] MySQLParser.PartitionValueItemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.partitionValueItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPartitionValueItem([NotNull] MySQLParser.PartitionValueItemContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.definerClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDefinerClause([NotNull] MySQLParser.DefinerClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.definerClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDefinerClause([NotNull] MySQLParser.DefinerClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.ifExists"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfExists([NotNull] MySQLParser.IfExistsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.ifExists"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfExists([NotNull] MySQLParser.IfExistsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.ifNotExists"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfNotExists([NotNull] MySQLParser.IfNotExistsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.ifNotExists"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfNotExists([NotNull] MySQLParser.IfNotExistsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.procedureParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProcedureParameter([NotNull] MySQLParser.ProcedureParameterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.procedureParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProcedureParameter([NotNull] MySQLParser.ProcedureParameterContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.functionParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionParameter([NotNull] MySQLParser.FunctionParameterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.functionParameter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionParameter([NotNull] MySQLParser.FunctionParameterContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.collate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCollate([NotNull] MySQLParser.CollateContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.collate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCollate([NotNull] MySQLParser.CollateContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.typeWithOptCollate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeWithOptCollate([NotNull] MySQLParser.TypeWithOptCollateContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.typeWithOptCollate"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeWithOptCollate([NotNull] MySQLParser.TypeWithOptCollateContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.schemaIdentifierPair"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSchemaIdentifierPair([NotNull] MySQLParser.SchemaIdentifierPairContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.schemaIdentifierPair"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSchemaIdentifierPair([NotNull] MySQLParser.SchemaIdentifierPairContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.viewRefList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterViewRefList([NotNull] MySQLParser.ViewRefListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.viewRefList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitViewRefList([NotNull] MySQLParser.ViewRefListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.updateList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUpdateList([NotNull] MySQLParser.UpdateListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.updateList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUpdateList([NotNull] MySQLParser.UpdateListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.updateElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUpdateElement([NotNull] MySQLParser.UpdateElementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.updateElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUpdateElement([NotNull] MySQLParser.UpdateElementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.charsetClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCharsetClause([NotNull] MySQLParser.CharsetClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.charsetClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCharsetClause([NotNull] MySQLParser.CharsetClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.fieldsClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFieldsClause([NotNull] MySQLParser.FieldsClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.fieldsClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFieldsClause([NotNull] MySQLParser.FieldsClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.fieldTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFieldTerm([NotNull] MySQLParser.FieldTermContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.fieldTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFieldTerm([NotNull] MySQLParser.FieldTermContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.linesClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLinesClause([NotNull] MySQLParser.LinesClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.linesClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLinesClause([NotNull] MySQLParser.LinesClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.lineTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLineTerm([NotNull] MySQLParser.LineTermContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.lineTerm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLineTerm([NotNull] MySQLParser.LineTermContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.userList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUserList([NotNull] MySQLParser.UserListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.userList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUserList([NotNull] MySQLParser.UserListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.createUserList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreateUserList([NotNull] MySQLParser.CreateUserListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.createUserList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreateUserList([NotNull] MySQLParser.CreateUserListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.alterUserList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlterUserList([NotNull] MySQLParser.AlterUserListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.alterUserList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlterUserList([NotNull] MySQLParser.AlterUserListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.createUserEntry"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCreateUserEntry([NotNull] MySQLParser.CreateUserEntryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.createUserEntry"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCreateUserEntry([NotNull] MySQLParser.CreateUserEntryContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.alterUserEntry"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAlterUserEntry([NotNull] MySQLParser.AlterUserEntryContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.alterUserEntry"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAlterUserEntry([NotNull] MySQLParser.AlterUserEntryContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.retainCurrentPassword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRetainCurrentPassword([NotNull] MySQLParser.RetainCurrentPasswordContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.retainCurrentPassword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRetainCurrentPassword([NotNull] MySQLParser.RetainCurrentPasswordContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.discardOldPassword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDiscardOldPassword([NotNull] MySQLParser.DiscardOldPasswordContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.discardOldPassword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDiscardOldPassword([NotNull] MySQLParser.DiscardOldPasswordContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.replacePassword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReplacePassword([NotNull] MySQLParser.ReplacePasswordContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.replacePassword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReplacePassword([NotNull] MySQLParser.ReplacePasswordContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.user"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUser([NotNull] MySQLParser.UserContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.user"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUser([NotNull] MySQLParser.UserContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.likeClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLikeClause([NotNull] MySQLParser.LikeClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.likeClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLikeClause([NotNull] MySQLParser.LikeClauseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.likeOrWhere"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLikeOrWhere([NotNull] MySQLParser.LikeOrWhereContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.likeOrWhere"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLikeOrWhere([NotNull] MySQLParser.LikeOrWhereContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.onlineOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOnlineOption([NotNull] MySQLParser.OnlineOptionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.onlineOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOnlineOption([NotNull] MySQLParser.OnlineOptionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.noWriteToBinLog"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNoWriteToBinLog([NotNull] MySQLParser.NoWriteToBinLogContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.noWriteToBinLog"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNoWriteToBinLog([NotNull] MySQLParser.NoWriteToBinLogContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.usePartition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUsePartition([NotNull] MySQLParser.UsePartitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.usePartition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUsePartition([NotNull] MySQLParser.UsePartitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.fieldIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFieldIdentifier([NotNull] MySQLParser.FieldIdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.fieldIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFieldIdentifier([NotNull] MySQLParser.FieldIdentifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.columnName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterColumnName([NotNull] MySQLParser.ColumnNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.columnName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitColumnName([NotNull] MySQLParser.ColumnNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.columnInternalRef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterColumnInternalRef([NotNull] MySQLParser.ColumnInternalRefContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.columnInternalRef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitColumnInternalRef([NotNull] MySQLParser.ColumnInternalRefContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.columnInternalRefList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterColumnInternalRefList([NotNull] MySQLParser.ColumnInternalRefListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.columnInternalRefList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitColumnInternalRefList([NotNull] MySQLParser.ColumnInternalRefListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.columnRef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterColumnRef([NotNull] MySQLParser.ColumnRefContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.columnRef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitColumnRef([NotNull] MySQLParser.ColumnRefContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.insertIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInsertIdentifier([NotNull] MySQLParser.InsertIdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.insertIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInsertIdentifier([NotNull] MySQLParser.InsertIdentifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.indexName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIndexName([NotNull] MySQLParser.IndexNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.indexName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIndexName([NotNull] MySQLParser.IndexNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.indexRef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIndexRef([NotNull] MySQLParser.IndexRefContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.indexRef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIndexRef([NotNull] MySQLParser.IndexRefContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.tableWild"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTableWild([NotNull] MySQLParser.TableWildContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.tableWild"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTableWild([NotNull] MySQLParser.TableWildContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.schemaName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSchemaName([NotNull] MySQLParser.SchemaNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.schemaName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSchemaName([NotNull] MySQLParser.SchemaNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.schemaRef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSchemaRef([NotNull] MySQLParser.SchemaRefContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.schemaRef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSchemaRef([NotNull] MySQLParser.SchemaRefContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.procedureName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProcedureName([NotNull] MySQLParser.ProcedureNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.procedureName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProcedureName([NotNull] MySQLParser.ProcedureNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.procedureRef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProcedureRef([NotNull] MySQLParser.ProcedureRefContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.procedureRef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProcedureRef([NotNull] MySQLParser.ProcedureRefContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.functionName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionName([NotNull] MySQLParser.FunctionNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.functionName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionName([NotNull] MySQLParser.FunctionNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.functionRef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionRef([NotNull] MySQLParser.FunctionRefContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.functionRef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionRef([NotNull] MySQLParser.FunctionRefContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.triggerName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTriggerName([NotNull] MySQLParser.TriggerNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.triggerName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTriggerName([NotNull] MySQLParser.TriggerNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.triggerRef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTriggerRef([NotNull] MySQLParser.TriggerRefContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.triggerRef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTriggerRef([NotNull] MySQLParser.TriggerRefContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.viewName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterViewName([NotNull] MySQLParser.ViewNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.viewName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitViewName([NotNull] MySQLParser.ViewNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.viewRef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterViewRef([NotNull] MySQLParser.ViewRefContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.viewRef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitViewRef([NotNull] MySQLParser.ViewRefContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.tablespaceName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTablespaceName([NotNull] MySQLParser.TablespaceNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.tablespaceName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTablespaceName([NotNull] MySQLParser.TablespaceNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.tablespaceRef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTablespaceRef([NotNull] MySQLParser.TablespaceRefContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.tablespaceRef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTablespaceRef([NotNull] MySQLParser.TablespaceRefContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.logfileGroupName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLogfileGroupName([NotNull] MySQLParser.LogfileGroupNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.logfileGroupName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLogfileGroupName([NotNull] MySQLParser.LogfileGroupNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.logfileGroupRef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLogfileGroupRef([NotNull] MySQLParser.LogfileGroupRefContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.logfileGroupRef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLogfileGroupRef([NotNull] MySQLParser.LogfileGroupRefContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.eventName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEventName([NotNull] MySQLParser.EventNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.eventName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEventName([NotNull] MySQLParser.EventNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.eventRef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEventRef([NotNull] MySQLParser.EventRefContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.eventRef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEventRef([NotNull] MySQLParser.EventRefContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.udfName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUdfName([NotNull] MySQLParser.UdfNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.udfName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUdfName([NotNull] MySQLParser.UdfNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.serverName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterServerName([NotNull] MySQLParser.ServerNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.serverName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitServerName([NotNull] MySQLParser.ServerNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.serverRef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterServerRef([NotNull] MySQLParser.ServerRefContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.serverRef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitServerRef([NotNull] MySQLParser.ServerRefContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.engineRef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEngineRef([NotNull] MySQLParser.EngineRefContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.engineRef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEngineRef([NotNull] MySQLParser.EngineRefContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.tableName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTableName([NotNull] MySQLParser.TableNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.tableName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTableName([NotNull] MySQLParser.TableNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.filterTableRef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFilterTableRef([NotNull] MySQLParser.FilterTableRefContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.filterTableRef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFilterTableRef([NotNull] MySQLParser.FilterTableRefContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.tableRefWithWildcard"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTableRefWithWildcard([NotNull] MySQLParser.TableRefWithWildcardContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.tableRefWithWildcard"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTableRefWithWildcard([NotNull] MySQLParser.TableRefWithWildcardContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.tableRef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTableRef([NotNull] MySQLParser.TableRefContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.tableRef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTableRef([NotNull] MySQLParser.TableRefContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.tableRefList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTableRefList([NotNull] MySQLParser.TableRefListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.tableRefList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTableRefList([NotNull] MySQLParser.TableRefListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.tableAliasRefList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTableAliasRefList([NotNull] MySQLParser.TableAliasRefListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.tableAliasRefList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTableAliasRefList([NotNull] MySQLParser.TableAliasRefListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.parameterName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameterName([NotNull] MySQLParser.ParameterNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.parameterName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameterName([NotNull] MySQLParser.ParameterNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.labelIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLabelIdentifier([NotNull] MySQLParser.LabelIdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.labelIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLabelIdentifier([NotNull] MySQLParser.LabelIdentifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.labelRef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLabelRef([NotNull] MySQLParser.LabelRefContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.labelRef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLabelRef([NotNull] MySQLParser.LabelRefContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.roleIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRoleIdentifier([NotNull] MySQLParser.RoleIdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.roleIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRoleIdentifier([NotNull] MySQLParser.RoleIdentifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.roleRef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRoleRef([NotNull] MySQLParser.RoleRefContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.roleRef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRoleRef([NotNull] MySQLParser.RoleRefContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.pluginRef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPluginRef([NotNull] MySQLParser.PluginRefContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.pluginRef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPluginRef([NotNull] MySQLParser.PluginRefContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.componentRef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComponentRef([NotNull] MySQLParser.ComponentRefContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.componentRef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComponentRef([NotNull] MySQLParser.ComponentRefContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.resourceGroupRef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterResourceGroupRef([NotNull] MySQLParser.ResourceGroupRefContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.resourceGroupRef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitResourceGroupRef([NotNull] MySQLParser.ResourceGroupRefContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.windowName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWindowName([NotNull] MySQLParser.WindowNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.windowName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWindowName([NotNull] MySQLParser.WindowNameContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.pureIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPureIdentifier([NotNull] MySQLParser.PureIdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.pureIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPureIdentifier([NotNull] MySQLParser.PureIdentifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifier([NotNull] MySQLParser.IdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifier([NotNull] MySQLParser.IdentifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.identifierList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifierList([NotNull] MySQLParser.IdentifierListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.identifierList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifierList([NotNull] MySQLParser.IdentifierListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.identifierListWithParentheses"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifierListWithParentheses([NotNull] MySQLParser.IdentifierListWithParenthesesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.identifierListWithParentheses"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifierListWithParentheses([NotNull] MySQLParser.IdentifierListWithParenthesesContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.qualifiedIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterQualifiedIdentifier([NotNull] MySQLParser.QualifiedIdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.qualifiedIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitQualifiedIdentifier([NotNull] MySQLParser.QualifiedIdentifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.simpleIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimpleIdentifier([NotNull] MySQLParser.SimpleIdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.simpleIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimpleIdentifier([NotNull] MySQLParser.SimpleIdentifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.dotIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDotIdentifier([NotNull] MySQLParser.DotIdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.dotIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDotIdentifier([NotNull] MySQLParser.DotIdentifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.ulong_number"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUlong_number([NotNull] MySQLParser.Ulong_numberContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.ulong_number"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUlong_number([NotNull] MySQLParser.Ulong_numberContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.real_ulong_number"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReal_ulong_number([NotNull] MySQLParser.Real_ulong_numberContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.real_ulong_number"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReal_ulong_number([NotNull] MySQLParser.Real_ulong_numberContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.ulonglong_number"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUlonglong_number([NotNull] MySQLParser.Ulonglong_numberContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.ulonglong_number"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUlonglong_number([NotNull] MySQLParser.Ulonglong_numberContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.real_ulonglong_number"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReal_ulonglong_number([NotNull] MySQLParser.Real_ulonglong_numberContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.real_ulonglong_number"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReal_ulonglong_number([NotNull] MySQLParser.Real_ulonglong_numberContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteral([NotNull] MySQLParser.LiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteral([NotNull] MySQLParser.LiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.signedLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSignedLiteral([NotNull] MySQLParser.SignedLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.signedLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSignedLiteral([NotNull] MySQLParser.SignedLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.stringList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStringList([NotNull] MySQLParser.StringListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.stringList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStringList([NotNull] MySQLParser.StringListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.textStringLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTextStringLiteral([NotNull] MySQLParser.TextStringLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.textStringLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTextStringLiteral([NotNull] MySQLParser.TextStringLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.textString"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTextString([NotNull] MySQLParser.TextStringContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.textString"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTextString([NotNull] MySQLParser.TextStringContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.textStringHash"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTextStringHash([NotNull] MySQLParser.TextStringHashContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.textStringHash"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTextStringHash([NotNull] MySQLParser.TextStringHashContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.textLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTextLiteral([NotNull] MySQLParser.TextLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.textLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTextLiteral([NotNull] MySQLParser.TextLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.textStringNoLinebreak"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTextStringNoLinebreak([NotNull] MySQLParser.TextStringNoLinebreakContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.textStringNoLinebreak"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTextStringNoLinebreak([NotNull] MySQLParser.TextStringNoLinebreakContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.textStringLiteralList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTextStringLiteralList([NotNull] MySQLParser.TextStringLiteralListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.textStringLiteralList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTextStringLiteralList([NotNull] MySQLParser.TextStringLiteralListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.numLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumLiteral([NotNull] MySQLParser.NumLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.numLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumLiteral([NotNull] MySQLParser.NumLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.boolLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoolLiteral([NotNull] MySQLParser.BoolLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.boolLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoolLiteral([NotNull] MySQLParser.BoolLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.nullLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNullLiteral([NotNull] MySQLParser.NullLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.nullLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNullLiteral([NotNull] MySQLParser.NullLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.temporalLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTemporalLiteral([NotNull] MySQLParser.TemporalLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.temporalLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTemporalLiteral([NotNull] MySQLParser.TemporalLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.floatOptions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFloatOptions([NotNull] MySQLParser.FloatOptionsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.floatOptions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFloatOptions([NotNull] MySQLParser.FloatOptionsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.standardFloatOptions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStandardFloatOptions([NotNull] MySQLParser.StandardFloatOptionsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.standardFloatOptions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStandardFloatOptions([NotNull] MySQLParser.StandardFloatOptionsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.precision"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrecision([NotNull] MySQLParser.PrecisionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.precision"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrecision([NotNull] MySQLParser.PrecisionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.textOrIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTextOrIdentifier([NotNull] MySQLParser.TextOrIdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.textOrIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTextOrIdentifier([NotNull] MySQLParser.TextOrIdentifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.lValueIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLValueIdentifier([NotNull] MySQLParser.LValueIdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.lValueIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLValueIdentifier([NotNull] MySQLParser.LValueIdentifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.roleIdentifierOrText"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRoleIdentifierOrText([NotNull] MySQLParser.RoleIdentifierOrTextContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.roleIdentifierOrText"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRoleIdentifierOrText([NotNull] MySQLParser.RoleIdentifierOrTextContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.sizeNumber"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSizeNumber([NotNull] MySQLParser.SizeNumberContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.sizeNumber"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSizeNumber([NotNull] MySQLParser.SizeNumberContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.parentheses"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParentheses([NotNull] MySQLParser.ParenthesesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.parentheses"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParentheses([NotNull] MySQLParser.ParenthesesContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.equal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEqual([NotNull] MySQLParser.EqualContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.equal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEqual([NotNull] MySQLParser.EqualContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.optionType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOptionType([NotNull] MySQLParser.OptionTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.optionType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOptionType([NotNull] MySQLParser.OptionTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.varIdentType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVarIdentType([NotNull] MySQLParser.VarIdentTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.varIdentType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVarIdentType([NotNull] MySQLParser.VarIdentTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.setVarIdentType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSetVarIdentType([NotNull] MySQLParser.SetVarIdentTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.setVarIdentType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSetVarIdentType([NotNull] MySQLParser.SetVarIdentTypeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.identifierKeyword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifierKeyword([NotNull] MySQLParser.IdentifierKeywordContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.identifierKeyword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifierKeyword([NotNull] MySQLParser.IdentifierKeywordContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.identifierKeywordsAmbiguous1RolesAndLabels"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifierKeywordsAmbiguous1RolesAndLabels([NotNull] MySQLParser.IdentifierKeywordsAmbiguous1RolesAndLabelsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.identifierKeywordsAmbiguous1RolesAndLabels"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifierKeywordsAmbiguous1RolesAndLabels([NotNull] MySQLParser.IdentifierKeywordsAmbiguous1RolesAndLabelsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.identifierKeywordsAmbiguous2Labels"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifierKeywordsAmbiguous2Labels([NotNull] MySQLParser.IdentifierKeywordsAmbiguous2LabelsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.identifierKeywordsAmbiguous2Labels"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifierKeywordsAmbiguous2Labels([NotNull] MySQLParser.IdentifierKeywordsAmbiguous2LabelsContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.labelKeyword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLabelKeyword([NotNull] MySQLParser.LabelKeywordContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.labelKeyword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLabelKeyword([NotNull] MySQLParser.LabelKeywordContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.identifierKeywordsAmbiguous3Roles"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifierKeywordsAmbiguous3Roles([NotNull] MySQLParser.IdentifierKeywordsAmbiguous3RolesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.identifierKeywordsAmbiguous3Roles"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifierKeywordsAmbiguous3Roles([NotNull] MySQLParser.IdentifierKeywordsAmbiguous3RolesContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.identifierKeywordsUnambiguous"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifierKeywordsUnambiguous([NotNull] MySQLParser.IdentifierKeywordsUnambiguousContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.identifierKeywordsUnambiguous"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifierKeywordsUnambiguous([NotNull] MySQLParser.IdentifierKeywordsUnambiguousContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.roleKeyword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRoleKeyword([NotNull] MySQLParser.RoleKeywordContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.roleKeyword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRoleKeyword([NotNull] MySQLParser.RoleKeywordContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.lValueKeyword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLValueKeyword([NotNull] MySQLParser.LValueKeywordContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.lValueKeyword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLValueKeyword([NotNull] MySQLParser.LValueKeywordContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.identifierKeywordsAmbiguous4SystemVariables"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifierKeywordsAmbiguous4SystemVariables([NotNull] MySQLParser.IdentifierKeywordsAmbiguous4SystemVariablesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.identifierKeywordsAmbiguous4SystemVariables"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifierKeywordsAmbiguous4SystemVariables([NotNull] MySQLParser.IdentifierKeywordsAmbiguous4SystemVariablesContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.roleOrIdentifierKeyword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRoleOrIdentifierKeyword([NotNull] MySQLParser.RoleOrIdentifierKeywordContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.roleOrIdentifierKeyword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRoleOrIdentifierKeyword([NotNull] MySQLParser.RoleOrIdentifierKeywordContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="MySQLParser.roleOrLabelKeyword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRoleOrLabelKeyword([NotNull] MySQLParser.RoleOrLabelKeywordContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="MySQLParser.roleOrLabelKeyword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRoleOrLabelKeyword([NotNull] MySQLParser.RoleOrLabelKeywordContext context);
}
} // namespace Workbench.Parsers
